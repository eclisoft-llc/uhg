CREATE OR REPLACE PROCEDURE COMPACT.TB_CLM_UNET_CLM_HEAD_Load("STARTDATE" VARCHAR(16777216), "ENDDATE" VARCHAR(16777216))
RETURNS VARCHAR(16777216)
LANGUAGE SQL
EXECUTE AS OWNER
AS '


      declare result varchar;
            load_strt_ts timestamp;
            load_end_ts timestamp;
            ins_cnt number;
            updt_cnt number;
            unique_id varchar;
            begin
             SELECT UUID_STRING() into unique_id;
             SELECT CURRENT_TIMESTAMP() INTO load_strt_ts ;
      Create or Replace TEMPORARY table UNET_CLAIM_HEADER AS
      (SELECT   CURRENT_DATE AS BTCH_LOAD_DT,
               UNET_CLAIM_HEADER.UNET_CLM_HEAD_SYS_ID as UNET_CLM_HEAD_SYS_ID,
               UNET_CLAIM_HEADER.MBR_SYS_ID as MBR_SYS_ID,
               UNET_CLAIM_HEADER.CLM_AUD_NBR as CLM_AUD_NBR,
               UNET_CLAIM_HEADER.SYS_ENT_SEQ_NBR as SYS_ENT_SEQ_NBR,
               UNET_CLAIM_HEADER.SYS_ENT_DT as SYS_ENT_DT,
               UNET_CLAIM_HEADER.TRANS_CD as TRANS_CD,
               UNET_CLAIM_HEADER.CLM_DUP_KEY_BRK_NBR as CLM_DUP_KEY_BRK_NBR,
               UNET_CLAIM_HEADER.ADJ_LFTM_MED_BEN_AMT as ADJ_LFTM_MED_BEN_AMT,
               UNET_CLAIM_HEADER.ADJ_NBR as ADJ_NBR,
               UNET_CLAIM_HEADER.ASGN_ADJD_OFC_SYS_ID as ASGN_ADJD_OFC_SYS_ID,
               UNET_CLAIM_HEADER.BEN_COV_TYP_CD,
               UNET_CLAIM_HEADER.BEN_LVL_CAUS_CD,
               UNET_CLAIM_HEADER.BEN_STRCT_1_CD,
               UNET_CLAIM_HEADER.BEN_STRCT_2_CD,
               UNET_CLAIM_HEADER.BIL_RECV_DT,
               UNET_CLAIM_HEADER.CAI_RPRCNG_CD,
               UNET_CLAIM_HEADER.CPTATN_PAY_MDL_CD,
               UNET_CLAIM_HEADER.CLM_LOC_CD as CLM_LOC_CD,
               UNET_CLAIM_HEADER.CO_CD,
               UNET_CLAIM_HEADER.COV_TYP_CD,
               UNET_CLAIM_HEADER.CLM_ORIG_CD,
               UNET_CLAIM_HEADER.CUST_SEG_NBR as CUST_SEG_NBR,
               UNET_CLAIM_HEADER.CUST_SEG_SYS_ID as CUST_SEG_SYS_ID,
               UNET_CLAIM_HEADER.CUST_SEG_ROW_EFF_DT as CUST_SEG_ROW_EFF_DT,
               UNET_CLAIM_HEADER.DEPN_NBR as DEPN_NBR,
               UNET_CLAIM_HEADER.DERIV_MBR_MKT_NBR,
               UNET_CLAIM_HEADER.DIAG_1_CD as DIAG_1_CD,
               UNET_CLAIM_HEADER.DIAG_2_CD as DIAG_2_CD,
               UNET_CLAIM_HEADER.DIAG_3_CD as DIAG_3_CD,
               UNET_CLAIM_HEADER.DIAG_4_CD as DIAG_4_CD,
               UNET_CLAIM_HEADER.DIAG_5_CD as DIAG_5_CD,
               UNET_CLAIM_HEADER.DIR_READ_SEQ_NBR,
               UNET_CLAIM_HEADER.DSCHRG_STS_CD,
               UNET_CLAIM_HEADER.ERLY_SRVC_DT,
               UNET_CLAIM_HEADER.ENG_CD,
               UNET_CLAIM_HEADER.ENT_DRG_CD,
               UNET_CLAIM_HEADER.FAM_OOP_YTD_AMT,
               UNET_CLAIM_HEADER.FLM_LOC_NBR,
               UNET_CLAIM_HEADER.FLM_LOC_OFC_NBR,
               UNET_CLAIM_HEADER.FIDC_TYP_CD,
               UNET_CLAIM_HEADER.FM_TYP_CD,
               UNET_CLAIM_HEADER.FRANCH_1_CD,
               UNET_CLAIM_HEADER.FRANCH_2_CD,
               UNET_CLAIM_HEADER.GEO_AREA_NBR,
               UNET_CLAIM_HEADER.GEO_AREA_NBR_MKT_ROW_EFF_DT,
               UNET_CLAIM_HEADER.HLTHCAR_ECON_MBR_MKT_NBR,
               UNET_CLAIM_HEADER.HI_RISK_CLM_CLSS_CD,
               UNET_CLAIM_HEADER.HMO_ACCT_DIV_CD,
               UNET_CLAIM_HEADER.JOB_INJ_CD,
               UNET_CLAIM_HEADER.LT_SRVC_DT,
               UNET_CLAIM_HEADER.MDCR_PAYR_ID,
               UNET_CLAIM_HEADER.MEDCR_COB_TYP_CD,
               UNET_CLAIM_HEADER.MEDCR_ELIG_CD,
               UNET_CLAIM_HEADER.MEDCR_PRI_IND,
               UNET_CLAIM_HEADER.MBR_AGE,
               UNET_CLAIM_HEADER.MBR_BTH_DT,
               UNET_CLAIM_HEADER.MBR_FST_NM,
               UNET_CLAIM_HEADER.MBR_GDR_CD,
               UNET_CLAIM_HEADER.MBR_LST_NM,
               UNET_CLAIM_HEADER.MBR_MKT_NBR,
               UNET_CLAIM_HEADER.MBR_MKT_ROW_EFF_DT,
               UNET_CLAIM_HEADER.MBR_MKT_TYP_CD,
               UNET_CLAIM_HEADER.MBR_OOP_YTD_AMT,
               UNET_CLAIM_HEADER.MBR_PRI_PHYSN_MPIN,
               UNET_CLAIM_HEADER.MBR_PRI_PHYSN_PROV_SYS_ID,
               UNET_CLAIM_HEADER.MBR_PRI_PHYSN_PROV_ROW_EFF_DT,
               UNET_CLAIM_HEADER.MBR_ZIP_CD,
               UNET_CLAIM_HEADER.MBR_ZIP_ROW_EFF_DT,
               UNET_CLAIM_HEADER.MKT_SEG_CD,
               UNET_CLAIM_HEADER.MNNRP_PCT,
               UNET_CLAIM_HEADER.PD_CLSS_CD,
               UNET_CLAIM_HEADER.PD_DIV_CD,
               UNET_CLAIM_HEADER.PD_POL_NBR,
               UNET_CLAIM_HEADER.PTNT_ACCT_NBR,
               UNET_CLAIM_HEADER.PLN_CD,
               UNET_CLAIM_HEADER.PLN_VAR_SUBDIV_CD,
               UNET_CLAIM_HEADER.PRI_PHYSN_IPA_NBR,
               UNET_CLAIM_HEADER.PRI_PHYSN_TIN,
               UNET_CLAIM_HEADER.PRI_PHYSN_TIN_PRFX_CD,
               UNET_CLAIM_HEADER.PRI_PHYSN_TIN_SUFX_CD,
               UNET_CLAIM_HEADER.PROC_1_CD,
               UNET_CLAIM_HEADER.PROC_2_CD,
               UNET_CLAIM_HEADER.PROC_3_CD,
               UNET_CLAIM_HEADER.PROC_ADJD_OFC_SYS_ID,
               UNET_CLAIM_HEADER.PRDCT_CD,
               UNET_CLAIM_HEADER.PRTCTD_HLTH_INFO_CD,
               UNET_CLAIM_HEADER.REIM_POL_CD,
               UNET_CLAIM_HEADER.REL_CD,
               UNET_CLAIM_HEADER.RPRCNG_STS_CD,
               UNET_CLAIM_HEADER.RPRCNG_VEND_CD,
               UNET_CLAIM_HEADER.RPT_CD_BR_CD,
               UNET_CLAIM_HEADER.NON_UHG_EE_IND as NON_UHG_EE_IND,
               UNET_CLAIM_HEADER.SRC_SYS_CD as SRC_SYS_CD,
               UNET_CLAIM_HEADER.SRC_SYS_GRP_CD as SRC_SYS_GRP_CD,
               UNET_CLAIM_HEADER.STD_COB_TYP_CD,
               UNET_CLAIM_HEADER.SUBGRP_1_CD,
               UNET_CLAIM_HEADER.SUBGRP_2_CD,
               UNET_CLAIM_HEADER.SBSCR_BTH_DT,
               UNET_CLAIM_HEADER.SBSCR_EMPMT_STS_CD,
               UNET_CLAIM_HEADER.SBSCR_GDR_CD,
               UNET_CLAIM_HEADER.SBSCR_NBR as SBSCR_NBR,
               UNET_CLAIM_HEADER.SBSCR_ST_ABBR_CD,
               UNET_CLAIM_HEADER.SBSCR_ZIP_CD,
               UNET_CLAIM_HEADER.SBSCR_ZIP_ROW_EFF_DT,
               UNET_CLAIM_HEADER.SYS_DRG_CD,
               UNET_CLAIM_HEADER.TOPS_REL_CD as TOPS_REL_CD,
               UNET_CLAIM_HEADER.LOAD_DT as LOAD_DT,
               UNET_CLAIM_HEADER.UPDT_DT as UPDT_DT,
               UNET_CLAIM_HEADER.REF_PROV_UNIV_PROV_ID_NBR,
               UNET_CLAIM_HEADER.REF_PROV_AUTH_NBR,
               UNET_CLAIM_HEADER.MULT_PROC_1_PCT,
               UNET_CLAIM_HEADER.MULT_PROC_2_PCT,
               UNET_CLAIM_HEADER.MULT_PROC_3_PCT,
               UNET_CLAIM_HEADER.MULT_PROC_PRCSNG_CONT_CD,
               UNET_CLAIM_HEADER.ULIST_MULT_PROC_IND,
               UNET_CLAIM_HEADER.CHK_SPRS_IND,
               UNET_CLAIM_HEADER.SHR_ARNG_CD,
               UNET_CLAIM_HEADER.OBLIG_CD,
               UNET_CLAIM_HEADER.WRK_COMP_IND,
               UNET_CLAIM_HEADER.PAY_ENRLEE_IND,
               UNET_CLAIM_HEADER.WRKFLW_ID,
               UNET_CLAIM_HEADER.INT_IND,
               UNET_CLAIM_HEADER.CLN_NON_CLN_CD,
               UNET_CLAIM_HEADER.NON_CLN_ELEM_1_CD,
               UNET_CLAIM_HEADER.NON_CLN_ELEM_2_CD,
               UNET_CLAIM_HEADER.NON_CLN_ELEM_3_CD,
               UNET_CLAIM_HEADER.MORE_NON_CLN_ELEM_IND,
               UNET_CLAIM_HEADER.RESBMT_CD,
               UNET_CLAIM_HEADER.RESBMT_DT,
               UNET_CLAIM_HEADER.ORIG_FLN_DT as ORIG_FLN_DT,
               UNET_CLAIM_HEADER.ICD_VER_CD,
               UNET_CLAIM_STATISTICAL_SERVICE.CPTATN_FUND_CD,
      		 GRP_STRUCT.SITUS_ST_ABBR_CD,
       		   trim(ADJ_OFC.ADJD_OFC_CD) AS ADJD_OFC_CD,
         trim(ADJ_OFC.ADJD_OFC_TXT) AS ADJD_OFC_TXT,
         trim(ORIG_CD.CLM_ORIG_DESC) AS CLM_ORIG_DESC,
         GALA_PROC.PROC_MOD_CD,
         GALA_PROC.PROC_MOD_GRP_CD,
         (case when GALA_PROC.PROC_MOD_SYS_ID IS NULL Then 0 Else 1 End) AS PROC_REC_EXISTS,
         GALA_POS.AMA_PL_OF_SRVC_CD,
         GALA_POS.UNET_PL_OF_SRVC_CD,
        (case when GALA_POS.PL_OF_SRVC_SYS_ID IS NULL Then 0 Else 1 End) AS POS_REC_EXISTS,
        (Case When (GALA_PROC2.PROC_MOD_CD is null or Trim(coalesce(GALA_PROC2.PROC_MOD_GRP_CD,'''')) =''UN'') Then '''' Else coalesce(GALA_PROC2.PROC_MOD_CD, '''') End) as PROC_MOD_2_CD,
        (Case When (GALA_PROC3.PROC_MOD_CD is null or Trim(coalesce(GALA_PROC3.PROC_MOD_GRP_CD,'''')) =''UN'') Then '''' Else coalesce(GALA_PROC3.PROC_MOD_CD, '''') End) as PROC_MOD_3_CD,
        (Case When (GALA_PROC4.PROC_MOD_CD is null or Trim(coalesce(GALA_PROC4.PROC_MOD_GRP_CD,'''')) =''UN'') Then '''' Else coalesce(GALA_PROC4.PROC_MOD_CD, '''') End) as PROC_MOD_4_CD,
         ZIP.ST_ABBR_CD as ZIP_ST_ABBR_CD,
               ZIP.CTY_NM,
      	GALA_PROV.MPIN as GALA_PROV_MPIN,
      GALA_PROC.UPDT_DT as GALA_PROC_UPDT_DT,
      		 GALA_POS.UPDT_DT as GALA_POS_UPDT_DT,
      	GRP_STRUCT.UPDT_DT  as GRP_STRUCT_UPDT_DT,
      	ORIG_CD.UPDT_DT  as ORIG_CD_UPDT_DT,
       ADJ_OFC.UPDT_DT as ADJ_OFC_UPDT_DT	  ,
      ZIP.UPDT_DT as ZIP_UPDT_DT ,
      row_number() OVER (PARTITION BY UNET_CLAIM_HEADER.UNET_CLM_HEAD_SYS_ID,UNET_CLAIM_HEADER.MBR_SYS_ID ORDER BY UNET_CLAIM_HEADER.UNET_CLM_HEAD_SYS_ID,UNET_CLAIM_HEADER.MBR_SYS_ID DESC) as rownum
      FROM     UNET_UNET_CLAIM_HEADER UNET_CLAIM_HEADER
      inner join          UNET_UNET_CLAIM_STATISTICAL_SERVICE UNET_CLAIM_STATISTICAL_SERVICE
      on    UNET_CLAIM_HEADER.UNET_CLM_HEAD_SYS_ID = UNET_CLAIM_STATISTICAL_SERVICE.UNET_CLM_HEAD_SYS_ID
      AND      UNET_CLAIM_HEADER.MBR_SYS_ID = UNET_CLAIM_STATISTICAL_SERVICE.MBR_SYS_ID
      LEFT OUTER JOIN UNET_CUSTOMER_SEGMENT_GROUP_STRUCTURE GRP_STRUCT
       ON GRP_STRUCT.CUST_SEG_SYS_ID = UNET_CLAIM_HEADER.CUST_SEG_SYS_ID
       and GRP_STRUCT.PLN_VAR_SUBDIV_CD = UNET_CLAIM_HEADER.PLN_VAR_SUBDIV_CD
       and GRP_STRUCT.PRDCT_CD = UNET_CLAIM_HEADER.PRDCT_CD
       and GRP_STRUCT.RPT_CD_BR_CD = UNET_CLAIM_HEADER.RPT_CD_BR_CD
       and UNET_CLAIM_HEADER.ERLY_SRVC_DT between GRP_STRUCT.CUST_SEG_GRP_STRCT_ROW_EFF_DT and GRP_STRUCT.CUST_SEG_GRP_STRCT_ROW_END_DT
      LEFT OUTER JOIN UNET_ADJUDICATION_OFFICE  ADJ_OFC
       ON (ADJ_OFC.ADJD_OFC_SYS_ID=UNET_CLAIM_HEADER.PROC_ADJD_OFC_SYS_ID)
      LEFT OUTER JOIN UNET_CLAIM_ORIGINATION_CODE  ORIG_CD
      ON (ORIG_CD.CLM_ORIG_CD = UNET_CLAIM_HEADER.CLM_ORIG_CD)
      LEFT OUTER JOIN UNET_PROCEDURE_MODIFIER_CODE GALA_PROC
       on (UNET_CLAIM_STATISTICAL_SERVICE.PROC_MOD_1_SYS_ID = GALA_PROC.PROC_MOD_SYS_ID)
      LEFT OUTER JOIN UNET_PROCEDURE_MODIFIER_CODE GALA_PROC2
       on (UNET_CLAIM_STATISTICAL_SERVICE.PROC_MOD_2_SYS_ID = GALA_PROC2.PROC_MOD_SYS_ID)
      LEFT OUTER JOIN UNET_PROCEDURE_MODIFIER_CODE GALA_PROC3
       on (UNET_CLAIM_STATISTICAL_SERVICE.PROC_MOD_3_SYS_ID = GALA_PROC3.PROC_MOD_SYS_ID )
      LEFT OUTER JOIN UNET_PROCEDURE_MODIFIER_CODE GALA_PROC4
       on (UNET_CLAIM_STATISTICAL_SERVICE.PROC_MOD_4_SYS_ID = GALA_PROC4.PROC_MOD_SYS_ID)
      LEFT OUTER JOIN UNET_PLACE_OF_SERVICE_CODE GALA_POS
       on (UNET_CLAIM_STATISTICAL_SERVICE.BIL_PL_OF_SRVC_SYS_ID = GALA_POS.PL_OF_SRVC_SYS_ID)
      LEFT OUTER JOIN UNET_ZIP ZIP ON (UNET_CLAIM_STATISTICAL_SERVICE.PROV_ZIP_CD=ZIP.ZIP_CD AND UNET_CLAIM_STATISTICAL_SERVICE.PROV_ZIP_ROW_EFF_DT=ZIP.ZIP_ROW_EFF_DT)
      LEFT OUTER JOIN UNET_PROVIDER GALA_PROV ON ( GALA_PROV.PROV_SYS_ID = UNET_CLAIM_STATISTICAL_SERVICE.SRVC_PROV_SYS_ID AND GALA_PROV.PROV_ROW_EFF_DT = UNET_CLAIM_STATISTICAL_SERVICE.SRVC_PROV_ROW_EFF_DT)
      where    UNET_CLAIM_STATISTICAL_SERVICE.UPDT_DT >= DATE(:STARTDATE)
      AND      UNET_CLAIM_STATISTICAL_SERVICE.UPDT_DT < DATE(:ENDDATE)
      AND      UNET_CLAIM_HEADER.ERLY_SRVC_DT BETWEEN ''2002-01-01'' and current_date()
      --AND      ( UNET_CLAIM_STATISTICAL_SERVICE.CPTATN_FUND_CD IN (''W'',''X'',''Y'') OR  ( UNET_CLAIM_HEADER.OBLIG_CD = ''02''
      --AND     UNET_CLAIM_HEADER.BEN_LVL_CAUS_CD IN (''1'',''6'')))
      qualify rownum = 1);



      CREATE OR REPLACE TEMPORARY TABLE STG_GA_MEMBER as
      (SELECT   DISTINCT
               MBR_SYS_ID ,
               SBSCR_NBR ,
               RANK () OVER ( PARTITION BY MBR_SYS_ID  ORDER BY MBR_SYS_ID DESC ) AS RANK
      FROM UNET_MEMBER
      WHERE SRC_SYS_CD = ''CE'');



      Create or Replace TEMPORARY Table GALA_UNET_CLM_HEADER AS
      (select * from (SELECT TRIM(UNET_HDR.CLM_AUD_NBR) ||''-''|| UNET_HDR.MBR_SYS_ID ||''-''|| UNET_HDR.SYS_ENT_DT ||''-''|| UNET_HDR.SYS_ENT_SEQ_NBR ||''-''|| TRIM(COALESCE(UNET_HDR.CLM_DUP_KEY_BRK_NBR,'''')) ||''-''|| TRIM(COALESCE(UNET_HDR.TRANS_CD,'''')) AS GALA_UNET_CLM_HEAD_UNIQ_ID,
               CURRENT_DATE AS BTCH_LOAD_DT,
               UNET_HDR.UNET_CLM_HEAD_SYS_ID UNET_CLM_HEAD_SYS_ID,
               UNET_HDR.MBR_SYS_ID MBR_SYS_ID,
               UNET_HDR.CLM_AUD_NBR CLM_AUD_NBR,
               UNET_HDR.SYS_ENT_SEQ_NBR SYS_ENT_SEQ_NBR,
               UNET_HDR.SYS_ENT_DT SYS_ENT_DT,
               UNET_HDR.TRANS_CD TRANS_CD,
               UNET_HDR.CLM_DUP_KEY_BRK_NBR CLM_DUP_KEY_BRK_NBR,
               UNET_HDR.BEN_COV_TYP_CD BEN_COV_TYP_CD,
               UNET_HDR.BIL_RECV_DT BIL_RECV_DT,
               UNET_HDR.CLM_LOC_CD CLM_LOC_CD,
               UNET_HDR.CO_CD CO_CD,
               UNET_HDR.CUST_SEG_NBR CUST_SEG_NBR,
               UNET_HDR.CUST_SEG_SYS_ID CUST_SEG_SYS_ID,
               UNET_HDR.CUST_SEG_ROW_EFF_DT CUST_SEG_ROW_EFF_DT,
               UNET_HDR.DEPN_NBR DEPN_NBR,
               UNET_HDR.DERIV_MBR_MKT_NBR DERIV_MBR_MKT_NBR,
               UNET_HDR.DIAG_1_CD DIAG_1_CD,
               UNET_HDR.DSCHRG_STS_CD DSCHRG_STS_CD,
               UNET_HDR.ERLY_SRVC_DT ERLY_SRVC_DT,
               UNET_HDR.FM_TYP_CD FM_TYP_CD,
               UNET_HDR.LT_SRVC_DT LT_SRVC_DT,
               UNET_HDR.MBR_AGE MBR_AGE,
               UNET_HDR.MBR_BTH_DT MBR_BTH_DT,
               UNET_HDR.MBR_GDR_CD MBR_GDR_CD,
               UNET_HDR.MBR_MKT_NBR MBR_MKT_NBR,
               UNET_HDR.MKT_SEG_CD MKT_SEG_CD,
               UNET_HDR.PROC_ADJD_OFC_SYS_ID PROC_ADJD_OFC_SYS_ID,
               UNET_HDR.PRDCT_CD PRDCT_CD,
               UNET_HDR.REL_CD REL_CD,
               UNET_HDR.SRC_SYS_CD SRC_SYS_CD,
               COALESCE(TRIM(GALA_MEM.SBSCR_NBR),'''') SBSCR_NBR,
               UNET_HDR.TOPS_REL_CD TOPS_REL_CD,
               UNET_HDR.LOAD_DT LOAD_DT,
               UNET_HDR.UPDT_DT UPDT_DT,
               UNET_HDR.CPTATN_FUND_CD CPTATN_FUND_CD,
               UNET_HDR.CPTATN_FUND_CD as CPTATN_FUND_DERIV_CD,
               UNET_HDR.ADJ_NBR ADJ_NBR,
               UNET_HDR.BEN_LVL_CAUS_CD BEN_LVL_CAUS_CD,
               UNET_HDR.CLM_ORIG_CD CLM_ORIG_CD,
               UNET_HDR.SHR_ARNG_CD SHR_ARNG_CD,
               UNET_HDR.OBLIG_CD OBLIG_CD,
               UNET_HDR.HLTHCAR_ECON_MBR_MKT_NBR HLTHCAR_ECON_MBR_MKT_NBR,
               UNET_HDR.SYS_DRG_CD SYS_DRG_CD,
               UNET_HDR.ENT_DRG_CD ENT_DRG_CD,
               CURRENT_TIMESTAMP as REC_CRT_DTTM,
               CURRENT_TIMESTAMP as REC_UPDT_DTTM,
               ''GALA'' as REC_XTRCT_SRC_CD,
               ''GALA'' as REC_INPUT_SRC_CD,
               UNET_HDR.PLN_VAR_SUBDIV_CD PLN_VAR_SUBDIV_CD,
               UNET_HDR.RPT_CD_BR_CD RPT_CD_BR_CD,
               UNET_HDR.ICD_VER_CD ICD_VER_CD,
               UNET_HDR.SITUS_ST_ABBR_CD SITUS_ST_ABBR_CD,
               UNET_HDR.GRP_STRUCT_UPDT_DT AS  GRP_STRUCT_UPDT_DT,
               UNET_HDR.ENG_CD as ENG_CD
      FROM     UNET_CLAIM_HEADER UNET_HDR
               LEFT OUTER JOIN STG_GA_MEMBER GALA_MEM ON ( UNET_HDR.MBR_SYS_ID = GALA_MEM.MBR_SYS_ID AND GALA_MEM.RANK =1 )
      WHERE    UNET_HDR.BTCH_LOAD_DT >= :STARTDATE
      AND      UNET_HDR.SYS_ENT_DT >= ''2002-01-01 00:00:00.000''
     -- AND      UNET_HDR.MBR_SYS_ID<>0
	  ) t  qualify row_number() OVER (PARTITION BY t.GALA_UNET_CLM_HEAD_UNIQ_ID ORDER BY t.GALA_UNET_CLM_HEAD_UNIQ_ID ASC,t.BTCH_LOAD_DT,t.GRP_STRUCT_UPDT_DT DESC) =1 );
      Create or replace TEMPORARY table UNET_HEADER AS
      (SELECT distinct
      Trim(UNET_HDR.CLM_AUD_NBR) ||''-''|| UNET_HDR.MBR_SYS_ID ||''-''|| UNET_HDR.SYS_ENT_DT ||''-''|| UNET_HDR.SYS_ENT_SEQ_NBR ||''-''|| Trim(coalesce(UNET_HDR.CLM_DUP_KEY_BRK_NBR,'''')) ||''-''|| Trim(coalesce(UNET_HDR.TRANS_CD,'''')) AS GALA_UNET_CLM_HEAD_UNIQ_ID,
      UNET_HDR.PROC_ADJD_OFC_SYS_ID as PROC_ADJD_OFC_SYS_ID,
      UNET_HDR.CLM_ORIG_CD CLM_ORIG_CD,
      UNET_CLM_HEAD_SYS_ID,
      MBR_SYS_ID ,
      UNET_HDR.ADJ_OFC_UPDT_DT AS BTCH_LOAD_DT_ADJ_OFC,
      trim(UNET_HDR.ADJD_OFC_CD) AS ADJD_OFC_CD,
      trim(UNET_HDR.ADJD_OFC_TXT) AS ADJD_OFC_TXT,
      UNET_HDR.ORIG_CD_UPDT_DT AS BTCH_LOAD_DT_ORIG_CD,
      trim(UNET_HDR.CLM_ORIG_DESC) AS CLM_ORIG_DESC
      FROM UNET_CLAIM_HEADER UNET_HDR
      WHERE UNET_HDR.BTCH_LOAD_DT >= :STARTDATE
      AND UNET_HDR.SYS_ENT_DT >= ''2002-01-01 00:00:00.000''
     -- AND UNET_HDR.MBR_SYS_ID<>0
	  );
      CREATE OR REPLACE TEMPORARY TABLE UNET_CLM_HEADER_UB92 AS
      (select * from (SELECT
      UNET_HDR.GALA_UNET_CLM_HEAD_UNIQ_ID GALA_UNET_CLM_HEAD_UNIQ_ID,
      UNET_HDR.BTCH_LOAD_DT_ADJ_OFC BTCH_LOAD_DT_ADJ_OFC,
      trim(UNET_HDR.ADJD_OFC_CD) AS ADJD_OFC_CD,
      trim(UNET_HDR.ADJD_OFC_TXT) AS ADJD_OFC_TXT,
      UNET_HDR.BTCH_LOAD_DT_ORIG_CD BTCH_LOAD_DT_ORIG_CD,
      trim(UNET_HDR.CLM_ORIG_DESC) AS CLM_ORIG_DESC,
      --TGT_CLM_HEAD.UNET_CLM_HEAD_SYS_ID AS UNET_CLM_HEAD_SYS_ID_TGT,
      --TGT_CLM_HEAD.REC_CRT_DTTM AS REC_CRT_DTTM_TGT,
      current_date AS BTCH_LOAD_DT_UB92,
      UB92.BIL_TYP_CD AS BIL_TYP_CD,
      UB92.ADMIS_DT AS ADMIS_DT,
      UB92.ADMIS_SRC_CD AS ADMIS_SRC_CD,
      UB92.UB92_ADMIS_TYP_CD  as UB92_ADMIS_TYP_CD
      FROM UNET_HEADER UNET_HDR
      --LEFT OUTER JOIN TB_CLM_UNET_CLM_HEAD TGT_CLM_HEAD
      --ON (TGT_CLM_HEAD.GALA_UNET_CLM_HEAD_UNIQ_ID = UNET_HDR.GALA_UNET_CLM_HEAD_UNIQ_ID )
      LEFT OUTER JOIN UNET_UNET_FACILITY_UB92 UB92
      ON ( UNET_HDR.UNET_CLM_HEAD_SYS_ID=UB92.UNET_CLM_HEAD_SYS_ID AND UNET_HDR.MBR_SYS_ID=UB92.MBR_SYS_ID )) t qualify row_number() OVER (PARTITION BY t.GALA_UNET_CLM_HEAD_UNIQ_ID ORDER BY t.GALA_UNET_CLM_HEAD_UNIQ_ID ASC,t.BTCH_LOAD_DT_ADJ_OFC,t.BTCH_LOAD_DT_ORIG_CD,t.BTCH_LOAD_DT_UB92 DESC) =1 );
      CREATE OR REPLACE TEMPORARY TABLE UNET_HDR1 AS
      (SELECT distinct
        Trim(UNET_HDR.CLM_AUD_NBR) ||''-''|| UNET_HDR.MBR_SYS_ID ||''-''|| UNET_HDR.SYS_ENT_DT||''-''|| UNET_HDR.SYS_ENT_SEQ_NBR ||''-''|| Trim(coalesce(UNET_HDR.CLM_DUP_KEY_BRK_NBR,'''')) ||''-''|| Trim(coalesce(UNET_HDR.TRANS_CD,'''')) AS GALA_UNET_CLM_HEAD_UNIQ_ID,
          CUST_SEG_SYS_ID,
          CUST_SEG_NBR,
          PLN_VAR_SUBDIV_CD,
          RPT_CD_BR_CD,
          PRDCT_CD,
          ERLY_SRVC_DT,
          CUST_SEG_SYS_ID||CUST_SEG_NBR||PLN_VAR_SUBDIV_CD||RPT_CD_BR_CD||PRDCT_CD||ERLY_SRVC_DT AS SEG_COV_KEY
      FROM UNET_CLAIM_HEADER  UNET_HDR
      WHERE UNET_HDR.BTCH_LOAD_DT >= :STARTDATE
          AND UNET_HDR.SYS_ENT_DT >= ''2002-01-01 00:00:00.000''
     -- AND UNET_HDR.MBR_SYS_ID<>0
	  );

	  CREATE OR REPLACE TEMPORARY TABLE UNET_SEG_COV AS
      (SELECT
           Max(SEG_COV.LOAD_DT) AS BTCH_LOAD_DT,
           SEG_COV.CUST_SEG_SYS_ID CUST_SEG_SYS_ID,
           SEG_COV.CUST_SEG_NBR CUST_SEG_NBR,
           SEG_COV.PLN_VAR_SUBDIV_CD PLN_VAR_SUBDIV_CD,
           SEG_COV.RPT_CD_BR_CD RPT_CD_BR_CD,
           SEG_COV.PRDCT_CD PRDCT_CD,
           SEG_COV.CES_CUST_NBR CES_CUST_NBR,
           SEG_COV.CES_FINC_ARNG_CD CES_FINC_ARNG_CD,
           SEG_COV.CES_GRP_NBR CES_GRP_NBR,
           SEG_COV.LD_PRTN_CD LD_PRTN_CD,
           SEG_COV.MHSA_CD MHSA_CD,
           SEG_COV.CUST_SEG_COV_ROW_EFF_DT CUST_SEG_COV_ROW_EFF_DT,
           SEG_COV.CUST_SEG_COV_ROW_END_DT CUST_SEG_COV_ROW_END_DT
      FROM UNET_CUSTOMER_SEGMENT_COVERAGE  SEG_COV where COV_TYP_CD LIKE ''M%''
      Group By SEG_COV.CUST_SEG_SYS_ID,SEG_COV.CUST_SEG_NBR, SEG_COV.PLN_VAR_SUBDIV_CD,SEG_COV.RPT_CD_BR_CD,
      SEG_COV.PRDCT_CD,SEG_COV.CES_CUST_NBR,SEG_COV.CES_FINC_ARNG_CD,SEG_COV.CES_GRP_NBR,SEG_COV.LD_PRTN_CD,
      SEG_COV.MHSA_CD,SEG_COV.CUST_SEG_COV_ROW_EFF_DT,SEG_COV.CUST_SEG_COV_ROW_END_DT ) ;

	  CREATE OR REPLACE TEMPORARY TABLE UNET_CLM_HEADER_SEG AS
      (SELECT * FROM (SELECT
      GALA_UNET_CLM_HEAD_UNIQ_ID,
      SEG_COV.BTCH_LOAD_DT BTCH_LOAD_DT,
      SEG_COV.CUST_SEG_SYS_ID CUST_SEG_SYS_ID,
      SEG_COV.CUST_SEG_NBR CUST_SEG_NBR,
      SEG_COV.PLN_VAR_SUBDIV_CD PLN_VAR_SUBDIV_CD,
      SEG_COV.RPT_CD_BR_CD RPT_CD_BR_CD,
      SEG_COV.PRDCT_CD PRDCT_CD,
      ERLY_SRVC_DT AS ERLY_SRVC_DT,
      SEG_COV.CES_CUST_NBR CES_CUST_NBR,
      SEG_COV.CES_FINC_ARNG_CD CES_FINC_ARNG_CD,
      SEG_COV.CES_GRP_NBR CES_GRP_NBR,
      SEG_COV.LD_PRTN_CD LD_PRTN_CD,
      SEG_COV.MHSA_CD MHSA_CD
      FROM UNET_HDR1  UNET_HDR
      INNER JOIN UNET_SEG_COV  SEG_COV
      ON( trim(UNET_HDR.CUST_SEG_SYS_ID)=trim(SEG_COV.CUST_SEG_SYS_ID)
      AND trim(UNET_HDR.CUST_SEG_NBR)=trim(SEG_COV.CUST_SEG_NBR)
      AND trim(UNET_HDR.PLN_VAR_SUBDIV_CD)=trim(SEG_COV.PLN_VAR_SUBDIV_CD)
      AND trim(UNET_HDR.RPT_CD_BR_CD)=trim(SEG_COV.RPT_CD_BR_CD)
      AND trim(UNET_HDR.PRDCT_CD)=trim(SEG_COV.PRDCT_CD)
      AND UNET_HDR.ERLY_SRVC_DT >= SEG_COV.CUST_SEG_COV_ROW_EFF_DT
      AND UNET_HDR.ERLY_SRVC_DT <= SEG_COV.CUST_SEG_COV_ROW_END_DT)) t qualify row_number() OVER (PARTITION BY t.GALA_UNET_CLM_HEAD_UNIQ_ID ORDER BY t.GALA_UNET_CLM_HEAD_UNIQ_ID,t.CUST_SEG_SYS_ID,t.CUST_SEG_NBR,t.PLN_VAR_SUBDIV_CD,t.RPT_CD_BR_CD,t.PRDCT_CD,t.ERLY_SRVC_DT ASC,t.BTCH_LOAD_DT DESC) =1 );

	  CREATE OR REPLACE TRANSIENT TABLE TB_CLM_UNET_CLM_HEAD AS
      (SELECT  CLM_HDR.UNET_CLM_HEAD_SYS_ID UNET_CLM_HEAD_SYS_ID ,
      CLM_HDR.CLM_AUD_NBR CLM_AUD_NBR,
      CLM_HDR.CLM_DUP_KEY_BRK_NBR CLM_AUD_DUP_KEY_BRKR_NBR,
      CLM_HDR.SYS_ENT_DT CLM_AUD_SYS_ENT_DT,
      CLM_HDR.SYS_ENT_SEQ_NBR CLM_AUD_SYS_ENT_SEQ_NBR,
      CLM_HDR.TRANS_CD CLM_AUD_TRANS_CD,
      CLM_HDR.BEN_COV_TYP_CD,
      CLM_HDR.CO_CD CLM_CO_CD,
      CLM_HDR.CUST_SEG_NBR CLM_CUST_SEG_NBR,
      CLM_HDR.CUST_SEG_ROW_EFF_DT CLM_CUST_SEG_ROW_EFF_DT,
      nvl(CLM_HDR.CUST_SEG_SYS_ID,-1) CLM_CUST_SEG_SYS_ID,
      CLM_HDR.CLM_LOC_CD CLM_FM_TYP_CD,
      CLM_HDR.ERLY_SRVC_DT CLM_FST_SRVC_DT,
      CLM_HDR.LT_SRVC_DT CLM_LST_SRVC_DT,
      CLM_HDR.MBR_AGE CLM_MBR_AGE,
      CLM_HDR.MBR_BTH_DT CLM_MBR_BTH_DT,
      CLM_HDR.DEPN_NBR CLM_MBR_DEPN_NBR,
      CLM_HDR.MBR_GDR_CD CLM_MBR_GDR_CD,
      CLM_HDR.DERIV_MBR_MKT_NBR CLM_MBR_MKT_DERIV_NBR,
      CLM_HDR.MBR_MKT_NBR CLM_MBR_MKT_NBR,
      CLM_HDR.TOPS_REL_CD CLM_MBR_REL_CD,
      CLM_HDR.SBSCR_NBR CLM_MBR_SBSCR_NBR,
      CLM_HDR.MBR_SYS_ID CLM_MBR_SRC_SYS_ID,
      CLM_HDR.MKT_SEG_CD CLM_MKT_SEG_CD,
      CLM_HDR.PRDCT_CD CLM_PRDCT_CD,
      CLM_HDR.ENG_CD CLM_ENG_CD,
      UB92.ADJD_OFC_CD CLM_PROC_ADJD_OFC_CD,
      UB92.ADJD_OFC_TXT CLM_PROC_ADJD_OFC_DESC,
      CLM_HDR.BIL_RECV_DT CLM_RECV_DT,
      CLM_HDR.OBLIG_CD CLM_OBLG_CD,
      CLM_HDR.SHR_ARNG_CD CLM_SHR_ARNG_CD,
      CLM_HDR.BEN_LVL_CAUS_CD CLM_BEN_LVL_CAUS_CD,
      CLM_HDR.ADJ_NBR CLM_ADJD_ID,
      CLM_HDR.CLM_ORIG_CD CLM_SBMT_SRC_CD,
      UB92.CLM_ORIG_DESC CLM_SBMT_SRC_DESC,
      CLM_HDR.CPTATN_FUND_CD CPTATN_FUND_CD,
      CLM_HDR.CPTATN_FUND_DERIV_CD CPTATN_FUND_DERIV_CD,
      CLM_HDR.DSCHRG_STS_CD DSCHRG_STS_CD,
      '''' as DSCHRG_STS_DESC,
      CLM_HDR.GALA_UNET_CLM_HEAD_UNIQ_ID GALA_UNET_CLM_HEAD_UNIQ_ID,
      CLM_HDR.HLTHCAR_ECON_MBR_MKT_NBR CLM_HLTHCAR_ECON_MBR_MKT_NBR,
      CLM_HDR.DIAG_1_CD CLM_PRI_DIAG_CD,
      nvl(UB92.ADMIS_DT, ''9999-12-31'') ADMIT_DT,
      UB92.UB92_ADMIS_TYP_CD ADMIT_TYP_CD,
      UB92.ADMIS_SRC_CD ADMIT_SRC_CD,
      UB92.BIL_TYP_CD BILL_TYP_CD,
      CLM_HDR.SYS_DRG_CD SYS_DIAG_REL_GRP_CD,
      CLM_HDR.ENT_DRG_CD ENT_DIAG_REL_GRP_CD,
      				SEG.CES_FINC_ARNG_CD CES_FINC_ARNG_CD,
      				SEG.CES_CUST_NBR CES_CUST_NBR,
      			  	SEG.CES_GRP_NBR CES_GRP_NBR,
      			  	SEG.LD_PRTN_CD LD_PRTN_CD,
      			  	SEG.MHSA_CD MHSA_PRDCT_CD,
      MHSA.MHSA_DESC MHSA_PRDCT_DESC,
      CLM_HDR.PLN_VAR_SUBDIV_CD PLN_VAR_SUBDIV_CD,
      CLM_HDR.RPT_CD_BR_CD RPT_CD_BR_CD,
      CLM_HDR.SRC_SYS_CD SRC_SYS_CD,
      CLM_HDR.LOAD_DT SRC_REC_CRT_DTTM,
      CLM_HDR.UPDT_DT SRC_REC_UPDT_DTTM,
      CLM_HDR.REC_CRT_DTTM REC_CRT_DTTM,
      current_date() as REC_UPDT_DTTM,
      CLM_HDR.REC_XTRCT_SRC_CD REC_XTRCT_SRC_CD,
      CLM_HDR.REC_INPUT_SRC_CD REC_INPUT_SRC_CD,
      CLM_HDR.BTCH_LOAD_DT BTCH_LOAD_DT,
      CASE WHEN CLM_HDR.ICD_VER_CD = ''0'' Then ''ICD10'' when CLM_HDR.ICD_VER_CD = ''9'' Then ''ICD9'' Else ''UNKNOWN''  end ICD_DIAG_TYP_CD,
      CLM_HDR.SITUS_ST_ABBR_CD CLM_ST_OF_ISS
      FROM GALA_UNET_CLM_HEADER CLM_HDR
      LEFT JOIN UNET_CLM_HEADER_UB92 UB92 ON CLM_HDR.GALA_UNET_CLM_HEAD_UNIQ_ID = UB92.GALA_UNET_CLM_HEAD_UNIQ_ID
      LEFT JOIN UNET_CLM_HEADER_SEG SEG ON CLM_HDR.GALA_UNET_CLM_HEAD_UNIQ_ID = SEG.GALA_UNET_CLM_HEAD_UNIQ_ID
      LEFT JOIN UNET_MHSA_CODE MHSA ON SEG.MHSA_CD = MHSA.MHSA_CD);
      SELECT COUNT(1) INTO ins_cnt FROM COMPACT.TB_CLM_UNET_CLM_HEAD;
       SELECT CURRENT_TIMESTAMP() INTO load_end_ts ;
       INSERT INTO ETL.DBA_PROCESS_LOG VALUES
       (:unique_id,''TB_CLM_UNET_CLM_HEAD'',''TB_CLM_UNET_CLM_HEAD'',''LOAD'',0,0,:load_strt_ts,:load_end_ts,
       CURRENT_TIMESTAMP,:ins_cnt,0,0) ;
       result:=''TB_CLM_UNET_CLM_HEAD refresh completed successfully'';
       return result;
       end;

  	 ';