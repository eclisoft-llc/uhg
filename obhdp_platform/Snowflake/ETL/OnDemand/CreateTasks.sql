CREATE TASK IF NOT EXISTS ETL.FND_CLM_TRANS_SRVC_LN_LD
  WAREHOUSE = ECT_STG_OBH_DP_LOAD_WH
  SCHEDULE = 'USING CRON 0 2 * * 2,4 America/Chicago'
  //SCHEDULE = '{ USING CRON <expr> <time_zone> }'
  ALLOW_OVERLAPPING_EXECUTION = FALSE
  USER_TASK_TIMEOUT_MS = 36000000
  COMMENT = 'Task to Trigger Foundation CLM_TRANS_SRVC_LN table load'
AS
  CALL ETL.TRIG_FOUNDATION_LOAD('COMPACT.FACT_CLAIM','FOUNDATION.CLM_TRANS_SRVC_LN', 'Historical Load') ;

  CREATE TASK IF NOT EXISTS ETL.FND_PHRM_DRG_CLM_LD
    WAREHOUSE = ECT_STG_OBH_DP_LOAD_WH
    SCHEDULE = 'USING CRON 0 2 * * 2,4 America/Chicago'
    //SCHEDULE = '{ USING CRON <expr> <time_zone> }'
    ALLOW_OVERLAPPING_EXECUTION = FALSE
    USER_TASK_TIMEOUT_MS = 36000000
    COMMENT = 'Task to Trigger Foundation CLM_TRANS_SRVC_LN table load'
  AS
    CALL ETL.TRIG_FOUNDATION_LOAD('COMPACT.FACT_CLAIM_RX_ADDITION','FOUNDATION.PHRM_DRG_CLM','Historical Load') ;

 ALTER TASK ETL.FND_CLM_TRANS_SRVC_LN_LD SUSPEND;
 ALTER TASK ETL.FND_PHRM_DRG_CLM_LD SUSPEND;

CREATE TASK IF NOT EXISTS ETL.OBHDP_CLM_TRANS_SRVC_LN_LD
  WAREHOUSE = ECT_STG_OBH_DP_LOAD_WH
  ALLOW_OVERLAPPING_EXECUTION = FALSE
  USER_TASK_TIMEOUT_MS = 36000000
  COMMENT = 'Task to Trigger OBHDP CLM_TRANS_SRVC_LN table load'
  AFTER ETL.FND_CLM_TRANS_SRVC_LN_LD
AS
  CALL ETL.DBA_MERGE('FOUNDATION.CLM_TRANS_SRVC_LN','OBH_DP.CLM_TRANS_SRVC_LN', 'Historical Load');

CREATE TASK IF NOT EXISTS ETL.OBHDP_DIM_PHRM_NDC_DRG_LD
  WAREHOUSE = ECT_STG_OBH_DP_LOAD_WH
  ALLOW_OVERLAPPING_EXECUTION = FALSE
  USER_TASK_TIMEOUT_MS = 36000000
  COMMENT = 'Task to Trigger OBHDP DIM_PHRM_NDC_DRG table load'
  AFTER ETL.FND_PHRM_DRG_CLM_LD
AS
  CALL ETL.DBA_MERGE('COMPACT.DIM_NDC_CODE','OBH_DP.DIM_PHRM_NDC_DRG','Historical Load');

  CREATE TASK IF NOT EXISTS ETL.OBHDP_PHRM_DRG_CLM_LD
    WAREHOUSE = ECT_STG_OBH_DP_LOAD_WH
    ALLOW_OVERLAPPING_EXECUTION = FALSE
    USER_TASK_TIMEOUT_MS = 36000000
    COMMENT = 'Task to Trigger OBHDP PHRM_DRG_CLM table load'
    AFTER ETL.FND_PHRM_DRG_CLM_LD
  AS
    CALL ETL.DBA_MERGE('FOUNDATION.PHRM_DRG_CLM','OBH_DP.PHRM_DRG_CLM','Historical Load');

    ALTER TASK ETL.FND_CLM_TRANS_SRVC_LN_LD RESUME ;
    ALTER TASK ETL.FND_PHRM_DRG_CLM_LD RESUME ;
    ALTER TASK ETL.OBHDP_CLM_TRANS_SRVC_LN_LD RESUME ;
    ALTER TASK ETL.OBHDP_DIM_PHRM_NDC_DRG_LD RESUME ;
    ALTER TASK ETL.OBHDP_PHRM_DRG_CLM_LD RESUME ;
