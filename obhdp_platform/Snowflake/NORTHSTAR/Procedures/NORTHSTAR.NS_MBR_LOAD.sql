CREATE OR REPLACE PROCEDURE NORTHSTAR.NS_MBR_LOAD(START_DATE VARCHAR,END_DATE VARCHAR)
RETURNS VARCHAR
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS
$$
    try
    {

        SQLcmd ="CREATE OR REPLACE  TABLE NORTHSTAR.NS_MBR_INCL_STEP1 AS (select distinct STATE_CODE,LOB,SRC_MBR_ID from ( select 'DX_INCL' stat, STATE_CODE,SRC_MBR_ID,LOB, PKG_SYS_ID,COMPANY_CODE, ST_DFN_AGE from   (SELECT   distinct SUBSTR(COMPANY_CODE,4,2) STATE_CODE,clm.memb_dim_id SRC_MBR_ID ,CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,           datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE,LOB.AGE,               case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID)    and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Include'   when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)    and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC is  NULL then 'Include'  else 'Exclude' end  LOB_INC,   case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)    and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Y' end step1,    case when SUBSTR(COMPANY_CODE,4,2)in  (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC  is  NULL then 'Y1' end step2 FROM COMPACT.FACT_CLAIM clm      INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID  INNER JOIN  NORTHSTAR.CONFIG_LMT_LOBS LOB ON  CLM.LINE_OF_BUSINESS_DIM_ID=LOB.LOB_DIM_ID  INNER JOIN     (SELECT DIAGNOSIS_DIM_ID FROM COMPACT.DIM_DIAGNOSIS      INNER JOIN NORTHSTAR.CONFIG_SUD_SMI_INCL NS ON DIAGNOSIS_CODE=NS.CODE_VALUE and ns.code_type not in ('GPI','PROC') and ns.STATE_CODE IS NULL) DIAG1    ON (DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_1_DIM_ID or DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_2_DIM_ID                                                              or DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_3_DIM_ID) inner JOIN COMPACT.DIM_DIAGNOSIS DIAGNOSIS ON DIAGNOSIS.DIAGNOSIS_DIM_ID =DIAG1.DIAGNOSIS_DIM_ID    INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID  and MBR.MCARE_DUAL_ENROLLED_FLAG='N'  AND  MBR.MEMB_DIM_ID     in (select  distinct m.MEMB_DIM_ID from compact.dim_member m where memb_elig_status = 'Y'and        exists (select 1 from compact.fact_member_elig_history h where h.memb_dim_id = m.memb_dim_id and h.term_date > current_date))    INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID  INNER JOIN COMPACT.DIM_PROCEDURE_MODIFIER PROCMOD2 ON CLM.CPT_MODIFIER_2_DIM_ID = PROCMOD2.MODIFIER_DIM_ID      WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1   AND claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)    AND PRIMARY_SVC_DATE between :1 and :2 and mbr.diamond_id <>'-1'  and post_date between :1 and add_months(:2,3) ) MEDCLM where STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y')  and state_code not in ('FL','NY','AZ')                                                 and ST_DFN_AGE>=AGE and LOB_INC='Include' and (step1='Y' or step2='Y1' ) UNION  select 'GPI_INCL' stat, STATE_CODE,SRC_MBR_ID,LOB, PKG_SYS_ID,COMPANY_CODE, ST_DFN_AGE from   (    select SUBSTR(COMPANY_CODE,4,2) STATE_CODE, clm.memb_dim_id SRC_MBR_ID,                                                                                                          CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,                                                                                                                     datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE,LOB.AGE, case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)                                                                                                           and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS                                                                                                         where PLAN_DESC is not NULL) then 'Include'   when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID)                                                                                                          and  LOB.PLAN_DESC is  NULL then 'Include'  else 'Exclude' end  LOB_INC,   case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)                                                                                                          and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS                                                                                                         where PLAN_DESC is not NULL) then 'Y' end step1,   case when SUBSTR(COMPANY_CODE,4,2)in  (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID)                                                                                                         and  LOB.PLAN_DESC  is  NULL then 'Y1' end step2     FROM COMPACT.FACT_CLAIM clm      INNER JOIN COMPACT.DIM_COMPANY CMP                                                                                                          ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID     INNER JOIN  NORTHSTAR.CONFIG_LMT_LOBS LOB ON  CLM.LINE_OF_BUSINESS_DIM_ID=LOB.LOB_DIM_ID                                                                                                          INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID AND MBR.MCARE_DUAL_ENROLLED_FLAG='N'     AND  MBR.MEMB_DIM_ID                                                                                                           in (select  distinct m.MEMB_DIM_ID from compact.dim_member m where memb_elig_status = 'Y'and  exists (select 1 from compact.fact_member_elig_history h                                                                                                          where h.memb_dim_id = m.memb_dim_id and h.term_date > current_date))  INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID                                                                                                            INNER JOIN  ((SELECT * FROM COMPACT.DIM_NDC_CODE WHERE GPI_CODE LIKE ANY (SELECT CODE_VALUE FROM NORTHSTAR.CONFIG_SUD_SMI_INCL where code_type='GPI' and STATE_CODE IS NULL )               ))                                                                                                          NDC   ON NDC.NDC_CODE_DIM_ID = CLM.NDC_CODE_DIM_ID LEFT JOIN  COMPACT.DIM_PROCEDURE_CODE PROC  ON clm.CPT_CODE_DIM_ID=PROC.PROCEDURE_DIM_ID                                                                                                            LEFT JOIN COMPACT.DIM_RX_GPI     GPI ON GPI.RX_GPI_DIM_ID =CLM.RX_GPI_DIM_ID  LEFT JOIN COMPACT.DIM_PROVIDER ATP ON ATP.PROV_DIM_ID = CLM.ATT_PROV_DIM_ID                                                                                                          WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1    AND claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status                                                                                                         WHERE claim_status_type_dim_id <> 3)    AND PRIMARY_SVC_DATE between  :1 and :2     and diamond_id<>-1  and post_date between :1 and add_months(:2,3) ) RXCLM  where                                                  STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y') and state_code not in ('FL','NY','AZ')  and  ST_DFN_AGE>=AGE and LOB_INC='Include' and (step1='Y' or step2='Y1' )   UNION select 'PROC_DX_INCL' stat,STATE_CODE,SRC_MBR_ID,LOB, PKG_SYS_ID,COMPANY_CODE, ST_DFN_AGE from (SELECT                                                                                                                                                         distinct SUBSTR(COMPANY_CODE,4,2) STATE_CODE,                                                                                                                                                       clm.memb_dim_id SRC_MBR_ID ,CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,                datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE,LOB.AGE,             case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Include'   when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC is  NULL then 'Include'  else 'Exclude' end  LOB_INC,   case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Y' end step1,   case when SUBSTR(COMPANY_CODE,4,2)in  (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC  is  NULL then 'Y1' end step2 FROM COMPACT.FACT_CLAIM clm INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID  INNER JOIN  NORTHSTAR.CONFIG_LMT_LOBS LOB ON  CLM.LINE_OF_BUSINESS_DIM_ID=LOB.LOB_DIM_ID  INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID  and MBR.MCARE_DUAL_ENROLLED_FLAG='N'  AND  MBR.MEMB_DIM_ID  in (select  distinct m.MEMB_DIM_ID from compact.dim_member m where memb_elig_status = 'Y'and  exists (select 1 from compact.fact_member_elig_history h where h.memb_dim_id = m.memb_dim_id and h.term_date > current_date)) INNER JOIN (select * from  COMPACT.DIM_PROCEDURE_CODE where PROCEDURE_CODE IN                                                                                                                                                        (select CODE_VALUE FROM NORTHSTAR.CONFIG_SUD_SMI_INCL where code_type='PROC' and STATE_CODE IS NULL   )) PROC                                                                                                                                                         ON clm.CPT_CODE_DIM_ID=PROC.PROCEDURE_DIM_ID    INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID   WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1                                                                                                                                                           AND claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)       AND PRIMARY_SVC_DATE between :1 and :2 and mbr.diamond_id <>'-1' and post_date between :1 and add_months(:2,3) ) MEDCLM                                                 where STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y') and state_code not in ('FL','NY','AZ')  and  ST_DFN_AGE>=AGE and LOB_INC='Include'                                                   and (step1='Y' or step2='Y1' )        ) )";
        var stmt = snowflake.createStatement({ sqlText: SQLcmd , binds: [START_DATE, END_DATE]} );
        var result = stmt.execute();
        result.next();

        SQLcmdclm1 ="create OR REPLACE  table NORTHSTAR.NS_SRC_CLM_MBR1 as (   select * from COMPACT.FACT_CLAIM clm   INNER JOIN NORTHSTAR.NS_MBR_INCL_STEP1 m ON    CLM.memb_dim_id = m.src_mbr_id         WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1 and claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)     AND PRIMARY_SVC_DATE >= add_months(:2,-25))";
        var stmtclm1 = snowflake.createStatement({ sqlText: SQLcmdclm1 , binds: [START_DATE, END_DATE]} );
        var resultclm1 = stmtclm1.execute();
        resultclm1.next();

        SQLcmdclm ="  create OR REPLACE  table NORTHSTAR.NS_SRC_CLM_MBR as (select * from NORTHSTAR.NS_SRC_CLM_MBR1 WHERE PRIMARY_SVC_DATE between :1 and :2  and post_date <= add_months(:2,3))";
        var stmtclm = snowflake.createStatement({ sqlText: SQLcmdclm , binds: [START_DATE, END_DATE]} );
        var resultclm = stmtclm.execute();
        resultclm.next();

        SQLdel= "DELETE FROM NORTHSTAR.NS_SRC_CLM_MBR1"
        var sqldelstmt = snowflake.createStatement({ sqlText: SQLdel } );
        var sqldelresult = sqldelstmt.execute();

        SQLcmdexcl="CREATE OR REPLACE TABLE NORTHSTAR.NS_MBR_12M_6M_EXCL_STEP2 AS  (   ( select distinct SRC_MBR_ID ,'12M Exclusion' from ( select  distinct STATE_CODE,SRC_MBR_ID,LOB, PKG_SYS_ID,COMPANY_CODE, ST_DFN_AGE,diag_ex_in ,min(diag_ex_in) over (partition by SRC_MBR_ID order by SRC_MBR_ID) EXCLUDE_MBR   from (   SELECT  SUBSTR(COMPANY_CODE,4,2) STATE_CODE,m.SRC_MBR_ID, CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,                datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE,LOB.AGE, case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Include'   when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC is  NULL then 'Include'  else 'Exclude' end  LOB_INC,   case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Y' end step1,   case when SUBSTR(COMPANY_CODE,4,2)in  (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC  is  NULL then 'Y1' end step2, case when  ( COS.COS_STL_4_DIM_ID =1  or DIAGNOSIS_1_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability')               or DIAGNOSIS_2_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability') or DIAGNOSIS_3_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability')               or DIAGNOSIS_4_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability' )    or DIAGNOSIS_5_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability' )     or DIAGNOSIS_6_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability' )    or DIAGNOSIS_7_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability' )    or DIAGNOSIS_8_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability' )    or DIAGNOSIS_9_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability' )    or DIAG1.DIAG_CAT_LVL_1_DIM_ID = 10011     or (DIAGNOSIS_1_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <   (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') )     or (DIAGNOSIS_2_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') )   or (DIAGNOSIS_3_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability'))     or (DIAGNOSIS_4_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') )      or (DIAGNOSIS_5_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') )      or (DIAGNOSIS_6_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') )      or (DIAGNOSIS_7_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability'))  or (DIAGNOSIS_8_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') )   or (DIAGNOSIS_9_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') ) ) then 'Exclude' else 'Include' end diag_ex_in   FROM NORTHSTAR.NS_SRC_CLM_MBR clm INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID  INNER JOIN  NORTHSTAR.CONFIG_LMT_LOBS LOB ON  CLM.LINE_OF_BUSINESS_DIM_ID=LOB.LOB_DIM_ID   INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID    INNER JOIN NORTHSTAR.NS_MBR_INCL_STEP1 m ON    CLM.memb_dim_id = m.src_mbr_id     INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID    LEFT JOIN  COMPACT.DIM_PROCEDURE_CODE PROC  ON clm.CPT_CODE_DIM_ID=PROC.PROCEDURE_DIM_ID   LEFT JOIN COMPACT.DIM_PLACE_OF_SVC PLSVC ON clm.PLACE_OF_SVC_1_DIM_ID= PLSVC.PLACE_OF_SVC_DIM_ID    LEFT JOIN COMPACT.DIM_COS_STL_4 COS ON COS.COS_STL_4_DIM_ID = clm.COS_STL_4_DIM_ID     left join (SELECT * FROM COMPACT.DIM_DIAGNOSIS )  DIAG1   ON (DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_1_DIM_ID    OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_2_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_3_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_4_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_5_DIM_ID    OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_6_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_7_DIM_ID   OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_8_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_9_DIM_ID  )   WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1  AND             PRIMARY_SVC_DATE between :1 and :2  )MEDCLM where STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y')  and ST_DFN_AGE>=AGE and LOB_INC='Include' and (step1='Y' or step2='Y1' ) ) where EXCLUDE_MBR ='Exclude'   )    UNION   ( select distinct SRC_MBR_ID,'6M Exclusion'   from ( select  *   from (   SELECT  SUBSTR(COMPANY_CODE,4,2) STATE_CODE,m.SRC_MBR_ID,     procedure_code,place_of_svc_code,DIAG1.DIAGNOSIS_CODE, CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,                datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE,LOB.AGE,              case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Include'   when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC is  NULL then 'Include'  else 'Exclude' end  LOB_INC,   case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Y' end step1,   case when SUBSTR(COMPANY_CODE,4,2)in  (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC  is  NULL then 'Y1' end step2     FROM NORTHSTAR.NS_SRC_CLM_MBR clm INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID  INNER JOIN  NORTHSTAR.CONFIG_LMT_LOBS LOB ON  CLM.LINE_OF_BUSINESS_DIM_ID=LOB.LOB_DIM_ID   INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID    INNER JOIN NORTHSTAR.NS_MBR_INCL_STEP1 m ON    CLM.memb_dim_id = m.src_mbr_id     INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID    LEFT JOIN  COMPACT.DIM_PROCEDURE_CODE PROC  ON clm.CPT_CODE_DIM_ID=PROC.PROCEDURE_DIM_ID   LEFT JOIN COMPACT.DIM_PLACE_OF_SVC PLSVC ON clm.PLACE_OF_SVC_1_DIM_ID= PLSVC.PLACE_OF_SVC_DIM_ID    LEFT JOIN COMPACT.DIM_COS_STL_4 COS ON COS.COS_STL_4_DIM_ID = clm.COS_STL_4_DIM_ID     left join (SELECT * FROM COMPACT.DIM_DIAGNOSIS )  DIAG1   ON (DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_1_DIM_ID    OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_2_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_3_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_4_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_5_DIM_ID    OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_6_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_7_DIM_ID   OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_8_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_9_DIM_ID  )   WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1 AND            PRIMARY_SVC_DATE between trunc(add_months(add_months(:2 ,-6),1),'MM') and :2  )MEDCLM where STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y')  and ST_DFN_AGE>=AGE and LOB_INC='Include' and (step1='Y' or step2='Y1' ) ) where  (case when place_of_svc_code  in (select  POS_DIAG_PROC from NORTHSTAR.CONFIG_SUD_DX_6M_EXCL where type='POS-Direct Exclusion' ) or procedure_code  in (select  POS_DIAG_PROC from NORTHSTAR.CONFIG_SUD_DX_6M_EXCL where type='PROC-Direct Exclusion' ) or DIAGNOSIS_CODE  in (select  POS_DIAG_PROC from NORTHSTAR.CONFIG_SUD_DX_6M_EXCL where type='DIAG-Direct Exclusion' )  then 'Exclude' when    ( DIAGNOSIS_CODE in (select  POS_DIAG_PROC from NORTHSTAR.CONFIG_SUD_DX_6M_EXCL where type='DIAG-InDirect Exclusion')      and place_of_svc_code  not in  ('21','23','27','28','31','32','51','52','61','62')  )    then 'Exclude' else 'Include' end)  ='Exclude' )   )";
        var stmtexcl = snowflake.createStatement({ sqlText: SQLcmdexcl , binds: [START_DATE, END_DATE]} );
         var resultexcl = stmtexcl.execute();
         resultexcl.next();
         var resultX2 = resultexcl.getColumnValue(1);


        SQLcmdins ="INSERT INTO NORTHSTAR.NS_MEMBER  select distinct STATE_CODE,SRC_MBR_ID , SUBSCRIBER_ID,MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,MEMB_ADDRESS_LINE_1,MEMB_CITY,MEMB_STATE,MEMB_ZIP,  LOB,BH_DX,DX_DESC,MEDICAID_NO, BH_COST_OF_CARE,MED_COST_OF_CARE,RX_COST_OF_CARE,TOTAL_COST_OF_CARE ,null SEGMENT1,'Y','Y',current_date(),null,null,:1,:2,null,null,null,SEQ_MEMB_ID1,DOD,GENDER,SOCIAL_SEC_NO,COUNTY from ( select  STATE_CODE,SRC_MBR_ID ,SUBSCRIBER_ID, MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,MEMB_ADDRESS_LINE_1,MEMB_CITY,MEMB_STATE,MEMB_ZIP, SEQ_MEMB_ID1, DOD,GENDER,SOCIAL_SEC_NO,case when STATE_CODE='TX' and LOB=388 then 'TX STARPLUS Cohort 100' else LINE_OF_BUSINESS_DESC end LOB,BH_DX,DX_DESC,MEDICAID_NO, BH_COST_OF_CARE,MED_COST_OF_CARE,RX_COST_OF_CARE,TOTAL_COST_OF_CARE  from ( select distinct STATE_CODE,SRC_MBR_ID ,SUBSCRIBER_ID, MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,MEMB_ADDRESS_LINE_1,MEMB_CITY,                                                                           MEMB_STATE,MEMB_ZIP,SEQ_MEMB_ID1, DOD,GENDER,SOCIAL_SEC_NO,LOB,BH_DX,  DX_DESC,                                                                           MEDICAID_NO,   sum(BH_COST_OF_CARE1) OVER (PARTITION BY SRC_MBR_ID order by SRC_MBR_ID)   BH_COST_OF_CARE,   sum(MED_COST_OF_CARE1) OVER (PARTITION BY SRC_MBR_ID order by SRC_MBR_ID)  MED_COST_OF_CARE,   sum(RX_COST_OF_CARE1) OVER (PARTITION BY SRC_MBR_ID order by SRC_MBR_ID)    RX_COST_OF_CARE,   TOTAL_COST_OF_CARE   from ( select STATE_CODE,SRC_MBR_ID , SUBSCRIBER_ID,MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,DOD,MEMB_ADDRESS_LINE_1,MEMB_CITY,MEMB_STATE,MEMB_ZIP,SEQ_MEMB_ID1,GENDER,SOCIAL_SEC_NO,LOB,BH_COST_OF_CARE1,MED_COST_OF_CARE1,MEDICAID_NO,     RX_COST_OF_CARE1,TOTAL_COST_OF_CARE,BH_DX, DIAG1.DIAGNOSIS_SHORT_DESC DX_DESC    from ( select distinct STATE_CODE,SRC_MBR_ID , SUBSCRIBER_ID,MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,DOD,MEMB_ADDRESS_LINE_1,MEMB_CITY,MEMB_STATE,MEMB_ZIP,SEQ_MEMB_ID1,GENDER,SOCIAL_SEC_NO,LOB,MEDICAID_NO  ,case when CLAIM_TYPE_DIM_ID IN (6,7,8) then sum(PAID_NET_AMT) OVER (PARTITION BY SRC_MBR_ID,CLAIM_TYPE_DIM_ID order by SRC_MBR_ID) else 0  end BH_COST_OF_CARE1, case when CLAIM_TYPE_DIM_ID IN (1,2) then sum(PAID_NET_AMT) OVER (PARTITION BY SRC_MBR_ID,CLAIM_TYPE_DIM_ID order by SRC_MBR_ID)  else 0 end MED_COST_OF_CARE1, case when CLAIM_TYPE_DIM_ID IN (3) then sum(PAID_NET_AMT) OVER (PARTITION BY SRC_MBR_ID,CLAIM_TYPE_DIM_ID order by SRC_MBR_ID) else 0 end RX_COST_OF_CARE1, case when CLAIM_TYPE_DIM_ID IN (1,2,3,6,7,8) then    sum(PAID_NET_AMT) OVER (PARTITION BY SRC_MBR_ID order by SRC_MBR_ID) end TOTAL_COST_OF_CARE,BH_DX          from( select distinct  m.STATE_CODE,m.SRC_MBR_ID ,MBR.SUBSCRIBER_ID,MBR.MEMB_FIRST_NAME,MBR.MEMB_LAST_NAME,MBR.DOB,MBR.DOD,MBR.MEMB_ADDRESS_LINE_1,MBR.MEMB_CITY,MBR.MEMB_STATE,MBR.MEMB_ZIP,MBR.SEQ_MEMB_ID SEQ_MEMB_ID1,MBR.GENDER,MBR.SOCIAL_SEC_NO,m.LOB,  first_value(DIAGNOSIS_CODE) over (partition by m.SRC_MBR_ID order by DIAGNOSIS_CODE nulls last)  BH_DX,                    CLAIM_TYPE_DIM_ID,WHOLE_CLAIM_STATUS_DIM_ID,PRIMARY_SVC_DATE,claim_status_dim_id,                 POST_DATE,    MBR.MEDICAID_NO, paid_net_amt,claim_number, line_number,SUB_LINE_CODE    FROM COMPACT.FACT_CLAIM clm   INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID    INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID    INNER JOIN NORTHSTAR.NS_MBR_INCL_STEP1 m ON  (CLM.memb_dim_id = m.src_mbr_id                   and  m.src_mbr_id   in (select src_mbr_id from NORTHSTAR.NS_MBR_INCL_STEP1 where src_mbr_id not in (select src_mbr_id from NORTHSTAR.NS_MBR_12M_6M_EXCL_STEP2))) INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID    LEFT JOIN COMPACT.DIM_DIAGNOSIS DIAG on    diag.DIAGNOSIS_DIM_ID=clm.DIAGNOSIS_1_DIM_ID LEFT JOIN  COMPACT.DIM_PROCEDURE_CODE PROC  ON clm.CPT_CODE_DIM_ID=PROC.PROCEDURE_DIM_ID   LEFT JOIN COMPACT.DIM_PLACE_OF_SVC PLSVC ON clm.PLACE_OF_SVC_1_DIM_ID= PLSVC.PLACE_OF_SVC_DIM_ID  ) where          CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1            and claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)          AND PRIMARY_SVC_DATE between   :1 and :2  and post_date between :1 and add_months(:2,3)  AND DOD is null    order by SRC_MBR_ID)     left  join (select * from COMPACT.DIM_DIAGNOSIS where DIAGNOSIS_TERM_DATE> current_date) DIAG1 on    diag1.diagnosis_code=BH_DX    where BH_COST_OF_CARE1 <>0 or MED_COST_OF_CARE1 <>0 or RX_COST_OF_CARE1 <>0 ) where   TOTAL_COST_OF_CARE>1000), COMPACT.DIM_LINE_OF_BUSINESS where LINE_OF_BUSINESS_DIM_ID=LOB     )a  inner join  COMPACT.DIM_MEMBER_ADDRESS ma on src_mbr_id=ma.memb_dim_id and addr_type='H' ";
        var stmtins = snowflake.createStatement({ sqlText: SQLcmdins , binds: [START_DATE, END_DATE]} );
        var resultins = stmtins.execute();
        resultins.next();
       var resultX = resultins.getColumnValue(1);


			sqlcmdState= "select distinct state_code from NORTHSTAR.NS_MEMBER where state_code not in ('FL','NY','AZ') order by state_code"
		    var sqlState = snowflake.createStatement({sqlText: sqlcmdState});
		    var resultState = sqlState.execute();
		    while ( resultState.next()) {
			var State1= resultState.getColumnValue(1);
		     SQLcmdMAX = "select state||Start_dt||end_dt from (select *, substr(p1,5,2) pp1_month, substr(p1,1,4) pp1_year, substr(p2,5,2) pp2_month, substr(p2,1,4) pp2_year,to_char(pp1_year||'-'||pp1_month||'-01') start_dt,to_char(last_day(to_date(to_char(pp2_year||'-'||pp2_month||'-01')),month))end_dt from (select distinct state,period,split_part(period,'-',1) p1,split_part(period,'-',2) p2 from (select state,max(period) Period from COMPACT.ACO_SNAPSHOT_SUMMARY where state=:1 group by state)))";
		       var sqlmaxdt = snowflake.createStatement({sqlText: SQLcmdMAX, binds: [State1]});
		      var resultCountmaxdt = sqlmaxdt.execute();
		      resultCountmaxdt.next();
		      max_date = resultCountmaxdt.getColumnValue(1);

		     SQLcmdACO="create or replace temporary table NORTHSTAR.AE_ATTR  as (SELECT   P.Memb_Dim_Id,p.state, first_value(R.CONTRACT_PROGRAM) over (partition by P.Memb_Dim_Id order by R.CONTRACT_END_DATE desc)  ||' - ' ||first_value(R.GROUP_NAME) over (partition by P.Memb_Dim_Id order by R.CONTRACT_END_DATE desc)  AE,to_date(substr(:1,3,10)) START_DT, to_date(substr(:1,13,10)) END_DT,substr(:1,1,2) st  FROM COMPACT.ACO_SNAPSHOT_SUMMARY P  INNER JOIN NORTHSTAR.NS_MEMBER ON MEMB_DIM_ID=SRC_MBR_ID AND STATE_CODE=P.STATE and state_code not in ('FL','NY','AZ') and P.state=substr(:1,1,2)  Right Join COMPACT.ACO_tin_List Q     On (P.Irs_Tax_Id=Q.TIN)             AND P.state=Q.state   AND Q.TIN_END_DATE>= to_date(dateadd(day,1,substr(:1,13,10)))       AND Q.Tin_Status  = 'Active' Right Join COMPACT.ACO_Contracts R                                          On (R.ACCOUNT_ID=Q.ACCOUNT_ID)       AND R.State=Q.State       AND R.Contract_Status = 'Active'      AND R.program_desc not in ('PMPM_BQM')  Right JOIN COMPACT.ACO_PRODUCTS T                                                      ON T.Account_ID = R.Account_id      AND T.Line_of_Business = P.LINE_OF_BUSINESS      AND T.PROGRAM_TYPE_DESC = P.PROGRAM_TYPE_DESC      AND UPPER(T.STATUS) = 'INCLUDE'    WHERE  PERIOD IN (year(START_DT)||lpad (month(START_DT),2,0)||'-'||year(END_DT)||lpad (month(END_DT),2,0)) )";
		      var stmtACO = snowflake.createStatement({ sqlText: SQLcmdACO, binds: [max_date]} );
		      var resultACO = stmtACO.execute();
		      resultACO.next();
		      var resultACO = resultACO.getColumnValue(1);
              SQLcmdACOupd="UPDATE NORTHSTAR.NS_MEMBER t1 SET t1.AE_NM=t2.AE FROM NORTHSTAR.AE_ATTR t2 WHERE t1.src_mbr_id=t2.memb_dim_id and AE_NM is null and STATE_CODE=t2.STATE and state_code not in ('FL','NY','AZ') ";
              var stmtACOupd = snowflake.createStatement({ sqlText: SQLcmdACOupd, binds: [START_DATE, END_DATE]} );
              var resultACOupd = stmtACOupd.execute();
              resultACOupd.next();
              var resultACOupd = resultACOupd.getColumnValue(1);

		     }

		   	   SQLcmdNSVISIT= "create or replace temporary table NORTHSTAR.NS_VISIT as (select distinct memb_dim_id,medicaid_no,sum(MEDICAL_VISITs) over (partition by src_mbr_id) med_visit,sum(BH_VISITs) over (partition by src_mbr_id) BH_VISIT from  (select src_mbr_id,ns.medicaid_no,memb_dim_id,add_months( :2  ,-6) beg_dt,claim_number,place_of_svc_code,CLM.PRIMARY_SVC_DATE ,admission_date,CALC_ADMITS,CLAIM_TYPE_DIM_ID ,case when CLM.PRIMARY_SVC_DATE between add_months( :2  ,-6) and  :2 and admission_date between  add_months( :2  ,-6)and  :2 and place_of_svc_code not in ('23')and CLAIM_TYPE_DIM_ID  in (1,2) then calc_admits else 0 end MEDICAL_VISITs,case when CLM.PRIMARY_SVC_DATE between add_months( :2  ,-6) and  :2 and admission_date between  add_months( :2  ,-6)and  :2 and CLAIM_TYPE_DIM_ID  in (6,7) then calc_admits else 0 end BH_VISITs from compact.fact_claim clm inner join NORTHSTAR.NS_MEMBER ns on src_mbr_id=memb_dim_id and state_code not in ('FL','NY','AZ')  LEFT JOIN COMPACT.DIM_PLACE_OF_SVC PLSVC ON clm.PLACE_OF_SVC_1_DIM_ID= PLSVC.PLACE_OF_SVC_DIM_ID where  CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1  and claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)  AND PRIMARY_SVC_DATE between  :1 and :2 and post_date between :1 and add_months(:2,3)))";
			   var stmtNSVISIT = snowflake.createStatement({ sqlText: SQLcmdNSVISIT, binds: [START_DATE, END_DATE]} );
                var resultNSVISIT = stmtNSVISIT.execute();
                resultNSVISIT.next();
                var resultNSVISIT = resultNSVISIT.getColumnValue(1);

  		   	   SQLcmdNSVISITupd= "update NORTHSTAR.NS_MEMBER ns set ns.MED_VISIT=vi.MED_VISIT,ns.BH_VISIT=vi.BH_VISIT from  NORTHSTAR.NS_VISIT vi where ns.src_mbr_id=vi.memb_dim_id and state_code not in ('FL','NY','AZ') ";
                 var stmtNSVISITupd = snowflake.createStatement({ sqlText: SQLcmdNSVISITupd} );
                  var resultNSVISITupd = stmtNSVISITupd.execute();
                  resultNSVISITupd.next();
                  var resultNSVISITupd = resultNSVISITupd.getColumnValue(1);

					   SQLcmdNSVISIT1= "create or replace temporary table NORTHSTAR.NS_VISIT as (select distinct memb_dim_id,medicaid_no,sum(ER_VISITs) over (partition by src_mbr_id) ER_VISIT from  (select distinct  src_mbr_id,ns.medicaid_no,memb_dim_id,add_months( :2  ,-6) beg_dt,place_of_svc_code,CLM.PRIMARY_SVC_DATE CLAIM_TYPE_DIM_ID ,case when CLM.PRIMARY_SVC_DATE between add_months( :2  ,-6) and  :2 and place_of_svc_code in ('23') and CLAIM_TYPE_DIM_ID  in (1,2,6,7) then calc_visits else 0 end ER_VISITs from compact.fact_claim clm inner join NORTHSTAR.NS_MEMBER ns on src_mbr_id=memb_dim_id LEFT JOIN COMPACT.DIM_PLACE_OF_SVC PLSVC ON clm.PLACE_OF_SVC_1_DIM_ID= PLSVC.PLACE_OF_SVC_DIM_ID where  CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1  and claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)  AND PRIMARY_SVC_DATE between  :1 and :2 and post_date between :1 and add_months(:2,3) and state_code not in ('FL','NY','AZ')  ))";
		   var stmtNSVISIT1 = snowflake.createStatement({ sqlText: SQLcmdNSVISIT1, binds: [START_DATE, END_DATE]} );
             var resultNSVISIT1 = stmtNSVISIT1.execute();
             resultNSVISIT1.next();
             var resultNSVISIT1 = resultNSVISIT1.getColumnValue(1);

	   SQLcmdNSVISITupd1= "update NORTHSTAR.NS_MEMBER ns set ns.ER_VISIT=vi.ER_VISIT from  NORTHSTAR.NS_VISIT vi where ns.src_mbr_id=vi.memb_dim_id and state_code not in ('FL','NY','AZ') ";
         var stmtNSVISITupd1 = snowflake.createStatement({ sqlText: SQLcmdNSVISITupd1} );
          var resultNSVISITupd1 = stmtNSVISITupd1.execute();
          resultNSVISITupd1.next();
          var resultNSVISITupd1 = resultNSVISITupd1.getColumnValue(1);

                SQLcmdFSP="CREATE OR REPLACE TEMPORARY TABLE NORTHSTAR.AE_ATTR AS (select memb_dim_id,'FSP' as desc from (select * from NORTHSTAR.NS_MEMBER NS inner join COMPACT.DIM_MEMBER  MBR ON MBR.MEMB_DIM_ID= NS.SRC_MBR_ID and state_code not in ('FL','NY','AZ') AND    datediff(YEAR, MBR.DOB, :2) <=  (select distinct AGE from NORTHSTAR.CONFIG_AE_AGE where AE_NM='FSP'))MBR    )";
                var stmtFSP = snowflake.createStatement({ sqlText: SQLcmdFSP , binds: [START_DATE, END_DATE]} );
                var resultFSP = stmtFSP.execute();
                resultFSP.next();
                var resultFSP = resultFSP.getColumnValue(1);

                SQLcmdFSPupd="UPDATE NORTHSTAR.NS_MEMBER t1 SET t1.AE_NM='FSP' FROM NORTHSTAR.AE_ATTR t2 WHERE t1.src_mbr_id=t2.memb_dim_id and AE_NM is null and state_code not in ('FL','NY','AZ')";
                var stmtFSPupd = snowflake.createStatement({ sqlText: SQLcmdFSPupd , binds: [START_DATE, END_DATE]} );
                var resultFSPupd = stmtFSPupd.execute();
                resultFSPupd.next();
                var resultFSPupd = resultFSPupd.getColumnValue(1);

               SQLcmdCNupd="UPDATE NORTHSTAR.NS_MEMBER t1 SET t1.AE_NM='CARE NAVIGATION'  WHERE  AE_NM is null and state_code not in ('FL','NY','AZ')";
                var stmtCNupd = snowflake.createStatement({ sqlText: SQLcmdCNupd , binds: [START_DATE, END_DATE]} );
                 var resultCNupd = stmtCNupd.execute();
                 resultCNupd.next();
                 var resultCNupd = resultCNupd.getColumnValue(1);



				SQLcmdNSAcuity= "create or replace  temporary table NORTHSTAR.ACUITY as (select  case when tot_point=0 then 'low acuity'  when tot_point in (1,2) then 'medium acuity' when tot_point>=3 then 'high acuity'end Segment , * from (select sum (BH_POINT+MED_POINT+TOT_CC_POINT+MED_VISIT_POINT+ER_VISIT_POINT+BH_VISIT_POINT) over (partition by src_mbr_id) tot_point ,* from 	(select STATE_CODE,SRC_MBR_ID,BH_COST_OF_CARE,MED_COST_OF_CARE,RX_COST_OF_CARE,TOTAL_COST_OF_CARE,MED_VISIT,ER_VISIT,BH_VISIT,case when BH_COST_OF_CARE > (select amount from NORTHSTAR.CONFIG_ACUITY where state='LA' and TYPE='BH') then 1 else 0 end BH_Point,case when MED_COST_OF_CARE > (select amount from NORTHSTAR.CONFIG_ACUITY where state='LA' and TYPE='MED') then 1 else 0   end MED_Point,	case  when TOTAL_COST_OF_CARE > (select amount from NORTHSTAR.CONFIG_ACUITY where state='LA' and TYPE='TOT') then 1 else 0  end TOT_CC_Point,case  when MED_VISIT > 0  then 1 else 0  end MED_VISIT_Point,case  when ER_VISIT > 0 then 1  else 0  end ER_VISIT_Point,case  when BH_VISIT > 0 then 1 else 0 end BH_VISIT_Point from NORTHSTAR.NS_MEMBER where state_code='LA' order by BH_COST_OF_CARE  )))";
				var stmtNSAcuity = snowflake.createStatement({ sqlText: SQLcmdNSAcuity});
              var resultNSAcuity = stmtNSAcuity.execute();
              resultNSAcuity.next();
              var resultNSAcuity = resultNSAcuity.getColumnValue(1);

		   	   SQLcmdNSAcuityupd= "update NORTHSTAR.NS_MEMBER ns set ns.SEGMENT=vi.SEGMENT from  NORTHSTAR.ACUITY vi where ns.src_mbr_id=vi.src_mbr_id and ns.state_code=vi.state_code";
               var stmtNSAcuityupd = snowflake.createStatement({ sqlText: SQLcmdNSAcuityupd} );
                var resultNSAcuityupd = stmtNSAcuityupd.execute();
                resultNSAcuityupd.next();
                var resultNSAcuityupd = resultNSAcuityupd.getColumnValue(1);

			  result11=resultNSVISITupd;
     		 return result11;

}
    catch (err) {
        result =  "Failed: Code: " + err.code + ", State: " + err.state;
        result += "\n Message: " + err.message;
        result += "\n Stack Trace:\n" + err.stackTraceTxt;
        throw result;
       }
$$
;