CREATE OR REPLACE PROCEDURE NORTHSTAR.NS_MBR_LOAD_ORIG(START_DATE VARCHAR,END_DATE VARCHAR)
RETURNS VARCHAR
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS
$$
    try
    {

        SQLcmd ="CREATE OR REPLACE  TABLE NORTHSTAR.NS_MBR_INCL_STEP1 AS (select distinct STATE_CODE,LOB,SRC_MBR_ID from ( select 'DX_INCL' stat, STATE_CODE,SRC_MBR_ID,LOB, PKG_SYS_ID,COMPANY_CODE, ST_DFN_AGE from   (SELECT   distinct SUBSTR(COMPANY_CODE,4,2) STATE_CODE,clm.memb_dim_id SRC_MBR_ID ,CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,           datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE,LOB.AGE,               case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID)    and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Include'   when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)    and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC is  NULL then 'Include'  else 'Exclude' end  LOB_INC,   case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)    and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Y' end step1,    case when SUBSTR(COMPANY_CODE,4,2)in  (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC  is  NULL then 'Y1' end step2 FROM COMPACT.FACT_CLAIM clm      INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID  INNER JOIN  NORTHSTAR.CONFIG_LMT_LOBS LOB ON  CLM.LINE_OF_BUSINESS_DIM_ID=LOB.LOB_DIM_ID  INNER JOIN     (SELECT DIAGNOSIS_DIM_ID FROM COMPACT.DIM_DIAGNOSIS      INNER JOIN NORTHSTAR.CONFIG_SUD_SMI_INCL NS ON DIAGNOSIS_CODE=NS.CODE_VALUE and ns.code_type not in ('GPI','PROC') and ns.STATE_CODE IS NULL) DIAG1    ON (DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_1_DIM_ID or DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_2_DIM_ID                                                              or DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_3_DIM_ID) inner JOIN COMPACT.DIM_DIAGNOSIS DIAGNOSIS ON DIAGNOSIS.DIAGNOSIS_DIM_ID =DIAG1.DIAGNOSIS_DIM_ID    INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID  and MBR.MCARE_DUAL_ENROLLED_FLAG='N'  AND  MBR.MEMB_DIM_ID     in (select  distinct m.MEMB_DIM_ID from compact.dim_member m where memb_elig_status = 'Y'and        exists (select 1 from compact.fact_member_elig_history h where h.memb_dim_id = m.memb_dim_id and h.term_date > current_date))    INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID  INNER JOIN COMPACT.DIM_PROCEDURE_MODIFIER PROCMOD2 ON CLM.CPT_MODIFIER_2_DIM_ID = PROCMOD2.MODIFIER_DIM_ID      WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1 and  SUBSTR(COMPANY_CODE,4,2) not in ('AZ','NY','FL')  AND claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)    AND PRIMARY_SVC_DATE between :1 and :2 and mbr.diamond_id <>'-1'  ) MEDCLM where STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y')                                                  and ST_DFN_AGE>=AGE and LOB_INC='Include' and (step1='Y' or step2='Y1' ) UNION  select 'GPI_INCL' stat, STATE_CODE,SRC_MBR_ID,LOB, PKG_SYS_ID,COMPANY_CODE, ST_DFN_AGE from   (    select SUBSTR(COMPANY_CODE,4,2) STATE_CODE, clm.memb_dim_id SRC_MBR_ID,                                                                                                          CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,                                                                                                                     datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE,LOB.AGE, case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)                                                                                                           and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS                                                                                                         where PLAN_DESC is not NULL) then 'Include'   when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID)                                                                                                          and  LOB.PLAN_DESC is  NULL then 'Include'  else 'Exclude' end  LOB_INC,   case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)                                                                                                          and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS                                                                                                         where PLAN_DESC is not NULL) then 'Y' end step1,   case when SUBSTR(COMPANY_CODE,4,2)in  (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID)                                                                                                         and  LOB.PLAN_DESC  is  NULL then 'Y1' end step2     FROM COMPACT.FACT_CLAIM clm      INNER JOIN COMPACT.DIM_COMPANY CMP                                                                                                          ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID     INNER JOIN  NORTHSTAR.CONFIG_LMT_LOBS LOB ON  CLM.LINE_OF_BUSINESS_DIM_ID=LOB.LOB_DIM_ID                                                                                                          INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID AND MBR.MCARE_DUAL_ENROLLED_FLAG='N'     AND  MBR.MEMB_DIM_ID                                                                                                           in (select  distinct m.MEMB_DIM_ID from compact.dim_member m where memb_elig_status = 'Y'and  exists (select 1 from compact.fact_member_elig_history h                                                                                                          where h.memb_dim_id = m.memb_dim_id and h.term_date > current_date))  INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID                                                                                                            INNER JOIN  ((SELECT * FROM COMPACT.DIM_NDC_CODE WHERE GPI_CODE LIKE ANY (SELECT CODE_VALUE FROM NORTHSTAR.CONFIG_SUD_SMI_INCL where code_type='GPI' and STATE_CODE IS NULL )               ))                                                                                                          NDC   ON NDC.NDC_CODE_DIM_ID = CLM.NDC_CODE_DIM_ID LEFT JOIN  COMPACT.DIM_PROCEDURE_CODE PROC  ON clm.CPT_CODE_DIM_ID=PROC.PROCEDURE_DIM_ID                                                                                                            LEFT JOIN COMPACT.DIM_RX_GPI     GPI ON GPI.RX_GPI_DIM_ID =CLM.RX_GPI_DIM_ID  LEFT JOIN COMPACT.DIM_PROVIDER ATP ON ATP.PROV_DIM_ID = CLM.ATT_PROV_DIM_ID                                                                                                          WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1 and  SUBSTR(COMPANY_CODE,4,2) not in ('AZ','NY','FL')    AND claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status                                                                                                         WHERE claim_status_type_dim_id <> 3)    AND PRIMARY_SVC_DATE between  :1 and :2     and diamond_id<>-1   ) RXCLM  where                                                  STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y')  and  ST_DFN_AGE>=AGE and LOB_INC='Include' and (step1='Y' or step2='Y1' )   UNION select 'PROC_DX_INCL' stat,STATE_CODE,SRC_MBR_ID,LOB, PKG_SYS_ID,COMPANY_CODE, ST_DFN_AGE from (SELECT                                                                                                                                                         distinct SUBSTR(COMPANY_CODE,4,2) STATE_CODE,                                                                                                                                                       clm.memb_dim_id SRC_MBR_ID ,CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,                datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE,LOB.AGE,             case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Include'   when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC is  NULL then 'Include'  else 'Exclude' end  LOB_INC,   case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Y' end step1,   case when SUBSTR(COMPANY_CODE,4,2)in  (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC  is  NULL then 'Y1' end step2 FROM COMPACT.FACT_CLAIM clm INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID  INNER JOIN  NORTHSTAR.CONFIG_LMT_LOBS LOB ON  CLM.LINE_OF_BUSINESS_DIM_ID=LOB.LOB_DIM_ID  INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID  and MBR.MCARE_DUAL_ENROLLED_FLAG='N'  AND  MBR.MEMB_DIM_ID  in (select  distinct m.MEMB_DIM_ID from compact.dim_member m where memb_elig_status = 'Y'and  exists (select 1 from compact.fact_member_elig_history h where h.memb_dim_id = m.memb_dim_id and h.term_date > current_date)) INNER JOIN (select * from  COMPACT.DIM_PROCEDURE_CODE where PROCEDURE_CODE IN                                                                                                                                                        (select CODE_VALUE FROM NORTHSTAR.CONFIG_SUD_SMI_INCL where code_type='PROC' and STATE_CODE IS NULL   )) PROC                                                                                                                                                         ON clm.CPT_CODE_DIM_ID=PROC.PROCEDURE_DIM_ID    INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID   WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1 and  SUBSTR(COMPANY_CODE,4,2) not in ('AZ','NY','FL')                                                                                                                                                          AND claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)       AND PRIMARY_SVC_DATE between :1 and :2 and mbr.diamond_id <>'-1'  ) MEDCLM                                                 where STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y')  and  ST_DFN_AGE>=AGE and LOB_INC='Include'                                                   and (step1='Y' or step2='Y1' )      UNION select 'FL_PLAN' stat,STATE_CODE,SRC_MBR_ID,LOB, PKG_SYS_ID,COMPANY_CODE, ST_DFN_AGE from (SELECT                                                                                                                                                         distinct SUBSTR(COMPANY_CODE,4,2) STATE_CODE,                                                                                                                                                       clm.memb_dim_id SRC_MBR_ID ,CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,                datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE             FROM COMPACT.FACT_CLAIM clm INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID  INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID  and MBR.MCARE_DUAL_ENROLLED_FLAG='N'  AND  MBR.MEMB_DIM_ID  in (select  distinct m.MEMB_DIM_ID from compact.dim_member m where memb_elig_status = 'Y'and  exists (select 1 from compact.fact_member_elig_history h where h.memb_dim_id = m.memb_dim_id and h.term_date > current_date))    INNER JOIN (select * from COMPACT.DIM_PLAN PLN where plan_code in (select distinct PLAN_IPRO from NORTHSTAR.CONFIG_LMT_LOBS where state='FL') ) PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID   WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1 and  SUBSTR(COMPANY_CODE,4,2) = ('FL')                                                                                                                                                          AND claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)       AND PRIMARY_SVC_DATE between :1 and :2 and mbr.diamond_id <>'-1'  ) MEDCLM                                                 where STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y' and state='FL')  and  ST_DFN_AGE>= (select distinct age FROM  NORTHSTAR.CONFIG_LMT_LOBS where state='FL')  UNION select 'AZ_DX_INCL' stat, STATE_CODE,SRC_MBR_ID,LOB, PKG_SYS_ID,COMPANY_CODE, ST_DFN_AGE from   (SELECT   distinct SUBSTR(COMPANY_CODE,4,2) STATE_CODE,clm.memb_dim_id SRC_MBR_ID ,CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,           datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE              FROM COMPACT.FACT_CLAIM clm      INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID   INNER JOIN     (SELECT DIAGNOSIS_DIM_ID FROM COMPACT.DIM_DIAGNOSIS      INNER JOIN NORTHSTAR.CONFIG_SUD_SMI_INCL NS ON DIAGNOSIS_CODE=NS.CODE_VALUE and ns.code_type not in ('GPI','PROC') and ns.STATE_CODE ='AZ') DIAG1    ON (DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_1_DIM_ID or DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_2_DIM_ID                                                              or DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_3_DIM_ID) inner JOIN COMPACT.DIM_DIAGNOSIS DIAGNOSIS ON DIAGNOSIS.DIAGNOSIS_DIM_ID =DIAG1.DIAGNOSIS_DIM_ID    INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID  and MBR.MCARE_DUAL_ENROLLED_FLAG='N'  AND  MBR.MEMB_DIM_ID     in (select  distinct m.MEMB_DIM_ID from compact.dim_member m where memb_elig_status = 'Y'and        exists (select 1 from compact.fact_member_elig_history h where h.memb_dim_id = m.memb_dim_id and h.term_date > current_date))    INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID      WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1 and  SUBSTR(COMPANY_CODE,4,2)  in ('AZ')  AND claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)    AND PRIMARY_SVC_DATE between :1 and :2 and mbr.diamond_id <>'-1'  ) MEDCLM where STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y' and state='AZ')                                                  UNION select 'NY_DX_INCL' stat, STATE_CODE,SRC_MBR_ID,LOB, PKG_SYS_ID,COMPANY_CODE, ST_DFN_AGE from   (SELECT   distinct SUBSTR(COMPANY_CODE,4,2) STATE_CODE,clm.memb_dim_id SRC_MBR_ID ,CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,           datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE              FROM COMPACT.FACT_CLAIM clm      INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID  INNER JOIN     (SELECT DIAGNOSIS_DIM_ID FROM COMPACT.DIM_DIAGNOSIS      INNER JOIN NORTHSTAR.CONFIG_SUD_SMI_INCL NS ON DIAGNOSIS_CODE=NS.CODE_VALUE and ns.code_type not in ('GPI','PROC') and ns.STATE_CODE ='NY') DIAG1    ON (DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_1_DIM_ID or DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_2_DIM_ID                                                              or DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_3_DIM_ID) inner JOIN COMPACT.DIM_DIAGNOSIS DIAGNOSIS ON DIAGNOSIS.DIAGNOSIS_DIM_ID =DIAG1.DIAGNOSIS_DIM_ID    INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID  and MBR.MCARE_DUAL_ENROLLED_FLAG='N'  AND  MBR.MEMB_DIM_ID     in (select  distinct m.MEMB_DIM_ID from compact.dim_member m where memb_elig_status = 'Y'and        exists (select 1 from compact.fact_member_elig_history h where h.memb_dim_id = m.memb_dim_id and h.term_date > current_date))    INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID        WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1 and  SUBSTR(COMPANY_CODE,4,2)  in ('NY')  AND claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)    AND PRIMARY_SVC_DATE between :1 and :2 and mbr.diamond_id <>'-1'  ) MEDCLM where STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y' and state='NY')     ) )";
        var stmt = snowflake.createStatement({ sqlText: SQLcmd , binds: [START_DATE, END_DATE]} );
        var result = stmt.execute();
        result.next();

        SQLcmdclm1 ="create OR REPLACE  table NORTHSTAR.NS_SRC_CLM_MBR1 as (   select * from COMPACT.FACT_CLAIM clm   INNER JOIN NORTHSTAR.NS_MBR_INCL_STEP1 m ON    CLM.memb_dim_id = m.src_mbr_id         WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1 and claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)     AND PRIMARY_SVC_DATE >= add_months(:2,-25) )";
        var stmtclm1 = snowflake.createStatement({ sqlText: SQLcmdclm1 , binds: [START_DATE, END_DATE]} );
        var resultclm1 = stmtclm1.execute();
        resultclm1.next();

        SQLcmdclm ="  create OR REPLACE  table NORTHSTAR.NS_SRC_CLM_MBR as (select * from NORTHSTAR.NS_SRC_CLM_MBR1 WHERE PRIMARY_SVC_DATE between :1 and :2  )";
        var stmtclm = snowflake.createStatement({ sqlText: SQLcmdclm , binds: [START_DATE, END_DATE]} );
        var resultclm = stmtclm.execute();
        resultclm.next();

        SQLdel= "DELETE FROM NORTHSTAR.NS_SRC_CLM_MBR1"
        var sqldelstmt = snowflake.createStatement({ sqlText: SQLdel } );
        var sqldelresult = sqldelstmt.execute();

        SQLcmdexcl="CREATE OR REPLACE TABLE NORTHSTAR.NS_MBR_12M_6M_EXCL_STEP2 AS  (   ( select distinct SRC_MBR_ID ,'12M Exclusion' from ( select  distinct STATE_CODE,SRC_MBR_ID,LOB, PKG_SYS_ID,COMPANY_CODE, ST_DFN_AGE,diag_ex_in ,min(diag_ex_in) over (partition by SRC_MBR_ID order by SRC_MBR_ID) EXCLUDE_MBR   from (   SELECT  SUBSTR(COMPANY_CODE,4,2) STATE_CODE,m.SRC_MBR_ID, CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,                datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE,LOB.AGE, case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Include'   when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC is  NULL then 'Include'  else 'Exclude' end  LOB_INC,   case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Y' end step1,   case when SUBSTR(COMPANY_CODE,4,2)in  (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC  is  NULL then 'Y1' end step2, case when  ( COS.COS_STL_4_DIM_ID =1  or DIAGNOSIS_1_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability')               or DIAGNOSIS_2_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability') or DIAGNOSIS_3_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability')               or DIAGNOSIS_4_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability' )    or DIAGNOSIS_5_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability' )     or DIAGNOSIS_6_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability' )    or DIAGNOSIS_7_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability' )    or DIAGNOSIS_8_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability' )    or DIAGNOSIS_9_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE<>'DevelopmentalDisability' )    or DIAG1.DIAG_CAT_LVL_1_DIM_ID = 10011     or (DIAGNOSIS_1_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <   (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') )     or (DIAGNOSIS_2_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') )   or (DIAGNOSIS_3_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability'))     or (DIAGNOSIS_4_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') )      or (DIAGNOSIS_5_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') )      or (DIAGNOSIS_6_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') )      or (DIAGNOSIS_7_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability'))  or (DIAGNOSIS_8_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') )   or (DIAGNOSIS_9_DIM_ID in ( select distinct DIAGNOSIS_DIM_ID from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') and datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) <  (select distinct age   from  NORTHSTAR.CONFIG_SUD_DX_EXCL where DIAGNOSIS_TYPE='DevelopmentalDisability') ) ) then 'Exclude' else 'Include' end diag_ex_in   FROM NORTHSTAR.NS_SRC_CLM_MBR clm INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID  INNER JOIN  NORTHSTAR.CONFIG_LMT_LOBS LOB ON  CLM.LINE_OF_BUSINESS_DIM_ID=LOB.LOB_DIM_ID   INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID    INNER JOIN NORTHSTAR.NS_MBR_INCL_STEP1 m ON    CLM.memb_dim_id = m.src_mbr_id     INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID    LEFT JOIN  COMPACT.DIM_PROCEDURE_CODE PROC  ON clm.CPT_CODE_DIM_ID=PROC.PROCEDURE_DIM_ID   LEFT JOIN COMPACT.DIM_PLACE_OF_SVC PLSVC ON clm.PLACE_OF_SVC_1_DIM_ID= PLSVC.PLACE_OF_SVC_DIM_ID    LEFT JOIN COMPACT.DIM_COS_STL_4 COS ON COS.COS_STL_4_DIM_ID = clm.COS_STL_4_DIM_ID     left join (SELECT * FROM COMPACT.DIM_DIAGNOSIS )  DIAG1   ON (DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_1_DIM_ID    OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_2_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_3_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_4_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_5_DIM_ID    OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_6_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_7_DIM_ID   OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_8_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_9_DIM_ID  )   WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1  AND             PRIMARY_SVC_DATE between :1 and :2  )MEDCLM where STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y')  and ST_DFN_AGE>=AGE and LOB_INC='Include' and (step1='Y' or step2='Y1' ) ) where EXCLUDE_MBR ='Exclude'   )    UNION   ( select distinct SRC_MBR_ID,'6M Exclusion'   from ( select  *   from (   SELECT  SUBSTR(COMPANY_CODE,4,2) STATE_CODE,m.SRC_MBR_ID,     procedure_code,place_of_svc_code,DIAG1.DIAGNOSIS_CODE, CLM.LINE_OF_BUSINESS_DIM_ID LOB,plan_code PKG_SYS_ID,COMPANY_CODE,                datediff(YEAR, MBR.DOB, PRIMARY_SVC_DATE) ST_DFN_AGE,LOB.AGE,              case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Include'   when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC is  NULL then 'Include'  else 'Exclude' end  LOB_INC,   case when SUBSTR(COMPANY_CODE,4,2) in (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOWER(PLN.PLAN_DESC) = (select LOWER(PLAN_DESC) from NORTHSTAR.CONFIG_LMT_LOBS where PLAN_DESC is not NULL) then 'Y' end step1,   case when SUBSTR(COMPANY_CODE,4,2)in  (LOB.STATE)  and CLM.LINE_OF_BUSINESS_DIM_ID in (LOB.LOB_DIM_ID) and  LOB.PLAN_DESC  is  NULL then 'Y1' end step2     FROM NORTHSTAR.NS_SRC_CLM_MBR clm INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID  INNER JOIN  NORTHSTAR.CONFIG_LMT_LOBS LOB ON  CLM.LINE_OF_BUSINESS_DIM_ID=LOB.LOB_DIM_ID   INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID    INNER JOIN NORTHSTAR.NS_MBR_INCL_STEP1 m ON    CLM.memb_dim_id = m.src_mbr_id     INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID    LEFT JOIN  COMPACT.DIM_PROCEDURE_CODE PROC  ON clm.CPT_CODE_DIM_ID=PROC.PROCEDURE_DIM_ID   LEFT JOIN COMPACT.DIM_PLACE_OF_SVC PLSVC ON clm.PLACE_OF_SVC_1_DIM_ID= PLSVC.PLACE_OF_SVC_DIM_ID    LEFT JOIN COMPACT.DIM_COS_STL_4 COS ON COS.COS_STL_4_DIM_ID = clm.COS_STL_4_DIM_ID     left join (SELECT * FROM COMPACT.DIM_DIAGNOSIS )  DIAG1   ON (DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_1_DIM_ID    OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_2_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_3_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_4_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_5_DIM_ID    OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_6_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_7_DIM_ID   OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_8_DIM_ID  OR DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_9_DIM_ID  )   WHERE CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1 AND            PRIMARY_SVC_DATE between trunc(add_months(add_months(:2 ,-6),1),'MM') and :2  )MEDCLM where STATE_CODE in (select distinct STATE FROM  NORTHSTAR.CONFIG_LMT_LOBS where flag='Y')  and ST_DFN_AGE>=AGE and LOB_INC='Include' and (step1='Y' or step2='Y1' ) ) where  (case when place_of_svc_code  in (select  POS_DIAG_PROC from NORTHSTAR.CONFIG_SUD_DX_6M_EXCL where type='POS-Direct Exclusion' ) or procedure_code  in (select  POS_DIAG_PROC from NORTHSTAR.CONFIG_SUD_DX_6M_EXCL where type='PROC-Direct Exclusion' ) or DIAGNOSIS_CODE  in (select  POS_DIAG_PROC from NORTHSTAR.CONFIG_SUD_DX_6M_EXCL where type='DIAG-Direct Exclusion' )  then 'Exclude' when    ( DIAGNOSIS_CODE in (select  POS_DIAG_PROC from NORTHSTAR.CONFIG_SUD_DX_6M_EXCL where type='DIAG-InDirect Exclusion')      and place_of_svc_code  not in  ('21','23','27','28','31','32','51','52','61','62')  )    then 'Exclude' else 'Include' end)  ='Exclude' )   )";
        var stmtexcl = snowflake.createStatement({ sqlText: SQLcmdexcl , binds: [START_DATE, END_DATE]} );
         var resultexcl = stmtexcl.execute();
         resultexcl.next();
         var resultX2 = resultexcl.getColumnValue(1);

        SQLcmdmbrchng ="CREATE OR REPLACE  TABLE NORTHSTAR.NS_MEMBER_CHNG AS (select distinct STATE_CODE,SRC_MBR_ID ,SUBSCRIBER_ID, MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,MEMB_ADDRESS_LINE_1,MEMB_CITY,MEMB_STATE,MEMB_ZIP,  LOB,BH_DX,DX_DESC,MEDICAID_NO, BH_COST_OF_CARE,MED_COST_OF_CARE,RX_COST_OF_CARE,TOTAL_COST_OF_CARE ,first_value(SEGMENT) over (partition by MBR_FST_NM||MBR_LST_NM||BTH_DT||MBR_ST_ABBR_CD order by MBR_FST_NM||MBR_LST_NM||BTH_DT||MBR_ST_ABBR_CD||CNT_CHRONIC_MD_ETG nulls last) SEGMENT1,'Y' AS IS_NEW,'Y' AS IS_ACTIVE,current_date() as REC_CRT_DTTM,null as REC_UPDT_DTTM,null as AE_NM,:1 as EXTRACT_START_DT,:2 AS EXTRACT_END_DT  from ( select  STATE_CODE,SRC_MBR_ID ,SUBSCRIBER_ID, MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,MEMB_ADDRESS_LINE_1,MEMB_CITY,MEMB_STATE,MEMB_ZIP, case when STATE_CODE='TX' and LOB=388 then 'TX STARPLUS Cohort 100' else LINE_OF_BUSINESS_DESC end LOB,BH_DX,DX_DESC,MEDICAID_NO, BH_COST_OF_CARE,MED_COST_OF_CARE,RX_COST_OF_CARE,TOTAL_COST_OF_CARE  from ( select distinct STATE_CODE,SRC_MBR_ID ,SUBSCRIBER_ID, MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,MEMB_ADDRESS_LINE_1,MEMB_CITY,                                                                           MEMB_STATE,MEMB_ZIP,LOB,BH_DX,  DX_DESC,                                                                           MEDICAID_NO,   sum(BH_COST_OF_CARE1) OVER (PARTITION BY SRC_MBR_ID order by SRC_MBR_ID)   BH_COST_OF_CARE,   sum(MED_COST_OF_CARE1) OVER (PARTITION BY SRC_MBR_ID order by SRC_MBR_ID)  MED_COST_OF_CARE,   sum(RX_COST_OF_CARE1) OVER (PARTITION BY SRC_MBR_ID order by SRC_MBR_ID)    RX_COST_OF_CARE,   TOTAL_COST_OF_CARE   from ( select STATE_CODE,SRC_MBR_ID , SUBSCRIBER_ID,MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,DOD,MEMB_ADDRESS_LINE_1,MEMB_CITY,MEMB_STATE,MEMB_ZIP,LOB,BH_COST_OF_CARE1,MED_COST_OF_CARE1,MEDICAID_NO,     RX_COST_OF_CARE1,TOTAL_COST_OF_CARE,BH_DX, DIAG1.DIAGNOSIS_SHORT_DESC DX_DESC    from ( select distinct STATE_CODE,SRC_MBR_ID , SUBSCRIBER_ID,MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,DOD,MEMB_ADDRESS_LINE_1,MEMB_CITY,MEMB_STATE,MEMB_ZIP,LOB,MEDICAID_NO  ,case when CLAIM_TYPE_DIM_ID IN (6,7,8) then sum(PAID_NET_AMT) OVER (PARTITION BY SRC_MBR_ID,CLAIM_TYPE_DIM_ID order by SRC_MBR_ID) else 0  end BH_COST_OF_CARE1, case when CLAIM_TYPE_DIM_ID IN (1,2) then sum(PAID_NET_AMT) OVER (PARTITION BY SRC_MBR_ID,CLAIM_TYPE_DIM_ID order by SRC_MBR_ID)  else 0 end MED_COST_OF_CARE1, case when CLAIM_TYPE_DIM_ID IN (3) then sum(PAID_NET_AMT) OVER (PARTITION BY SRC_MBR_ID,CLAIM_TYPE_DIM_ID order by SRC_MBR_ID) else 0 end RX_COST_OF_CARE1, case when CLAIM_TYPE_DIM_ID IN (1,2,3,6,7,8) then    sum(PAID_NET_AMT) OVER (PARTITION BY SRC_MBR_ID order by SRC_MBR_ID) end TOTAL_COST_OF_CARE,BH_DX          from( select distinct  m.STATE_CODE,m.SRC_MBR_ID ,MBR.SUBSCRIBER_ID,MBR.MEMB_FIRST_NAME,MBR.MEMB_LAST_NAME,MBR.DOB,MBR.DOD,MBR.MEMB_ADDRESS_LINE_1,MBR.MEMB_CITY,MBR.MEMB_STATE,MBR.MEMB_ZIP ,    m.LOB,  first_value(DIAGNOSIS_CODE) over (partition by m.SRC_MBR_ID order by DIAGNOSIS_CODE nulls last)  BH_DX,                    CLAIM_TYPE_DIM_ID,WHOLE_CLAIM_STATUS_DIM_ID,PRIMARY_SVC_DATE,claim_status_dim_id,                 POST_DATE,    MBR.MEDICAID_NO, paid_net_amt,claim_number, line_number,SUB_LINE_CODE    FROM COMPACT.FACT_CLAIM clm   INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID    INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID    INNER JOIN NORTHSTAR.NS_MBR_INCL_STEP1 m ON  (CLM.memb_dim_id = m.src_mbr_id                   and  m.src_mbr_id   in (select src_mbr_id from NORTHSTAR.NS_MBR_INCL_STEP1 where src_mbr_id not in (select src_mbr_id from NORTHSTAR.NS_MBR_12M_6M_EXCL_STEP2))) INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID    LEFT JOIN COMPACT.DIM_DIAGNOSIS DIAG on    diag.DIAGNOSIS_DIM_ID=clm.DIAGNOSIS_1_DIM_ID LEFT JOIN  COMPACT.DIM_PROCEDURE_CODE PROC  ON clm.CPT_CODE_DIM_ID=PROC.PROCEDURE_DIM_ID   LEFT JOIN COMPACT.DIM_PLACE_OF_SVC PLSVC ON clm.PLACE_OF_SVC_1_DIM_ID= PLSVC.PLACE_OF_SVC_DIM_ID  ) where          CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1            and claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)          AND PRIMARY_SVC_DATE between   :1 and :2   AND DOD is null    order by SRC_MBR_ID)     left  join (select * from COMPACT.DIM_DIAGNOSIS where DIAGNOSIS_TERM_DATE> current_date) DIAG1 on    diag1.diagnosis_code=BH_DX    where BH_COST_OF_CARE1 <>0 or MED_COST_OF_CARE1 <>0 or RX_COST_OF_CARE1 <>0 ) where   TOTAL_COST_OF_CARE>1000), COMPACT.DIM_LINE_OF_BUSINESS where LINE_OF_BUSINESS_DIM_ID=LOB     )a  left join FOUNDATION.MSEG_BY_INDIVIDUAL ON  MEMB_FIRST_NAME||MEMB_LAST_NAME||DOB||MEMB_STATE = MBR_FST_NM||MBR_LST_NM|| TO_DATE(TO_VARCHAR (TO_DATE (bth_dt ,'DDMONYYYY'),'YYYY-MM-DD'),'YYYY-MM-DD')||MBR_ST_ABBR_CD and SALES_CHANNEL='C&S' )";
        var stmtmbrchng = snowflake.createStatement({ sqlText: SQLcmdmbrchng , binds: [START_DATE, END_DATE]} );
        var resultmbrchng = stmtmbrchng.execute();
        resultmbrchng.next();
        var resultX1 = resultmbrchng.getColumnValue(1);

        sqlcmdcount= "select count(*) from NORTHSTAR.NS_MEMBER";
        var stmtcount = snowflake.createStatement({ sqlText: sqlcmdcount});
        var resultcount = stmtcount.execute();
        resultcount.next();
        var src_count = resultcount.getColumnValue(1);

        sqlcmdcountchng= "select count(*) from NORTHSTAR.NS_MEMBER_CHNG where STATE_CODE||src_mbr_id  in (select STATE_CODE||src_mbr_id from NORTHSTAR.NS_MEMBER)";
        var stmtcountchng = snowflake.createStatement({ sqlText: sqlcmdcountchng});
        var resultcountchng = stmtcountchng.execute();
        resultcountchng.next();
        var src_count1 = resultcountchng.getColumnValue(1);

        sqlcmdcountinsert="select count(*) from NORTHSTAR.NS_MEMBER_CHNG where STATE_CODE||src_mbr_id not  in (select STATE_CODE||src_mbr_id from NORTHSTAR.NS_MEMBER)";
        var stmtcountinsert = snowflake.createStatement({ sqlText: sqlcmdcountinsert});
        var resultcountinsert = stmtcountinsert.execute();
        resultcountinsert.next();
        var src_count2 = resultcountinsert.getColumnValue(1);

        sqlcmdcountmbrnotexists= "select count(*) from NORTHSTAR.NS_MEMBER where STATE_CODE||src_mbr_id not in (select STATE_CODE||src_mbr_id from NORTHSTAR.NS_MEMBER_CHNG) and state_code in (select distinct STATE_CODE from NORTHSTAR.NS_MEMBER_CHNG)";
        var stmtcountmbrnotexists = snowflake.createStatement({ sqlText: sqlcmdcountmbrnotexists});
        var resultcountmbrnotexists = stmtcountmbrnotexists.execute();
        resultcountmbrnotexists.next();
        var src_count3 = resultcountmbrnotexists.getColumnValue(1);

    if(src_count==0)
        {
        SQLcmdins ="INSERT INTO NORTHSTAR.NS_MEMBER  select distinct STATE_CODE,SRC_MBR_ID , SUBSCRIBER_ID,MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,MEMB_ADDRESS_LINE_1,MEMB_CITY,MEMB_STATE,MEMB_ZIP,  LOB,BH_DX,DX_DESC,MEDICAID_NO, BH_COST_OF_CARE,MED_COST_OF_CARE,RX_COST_OF_CARE,TOTAL_COST_OF_CARE ,first_value(SEGMENT) over (partition by MBR_FST_NM||MBR_LST_NM||BTH_DT||MBR_ST_ABBR_CD order by MBR_FST_NM||MBR_LST_NM||BTH_DT||MBR_ST_ABBR_CD||CNT_CHRONIC_MD_ETG nulls last) SEGMENT1,'Y','Y',current_date(),null,null,:1,:2 from ( select  STATE_CODE,SRC_MBR_ID ,SUBSCRIBER_ID, MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,MEMB_ADDRESS_LINE_1,MEMB_CITY,MEMB_STATE,MEMB_ZIP, case when STATE_CODE='TX' and LOB=388 then 'TX STARPLUS Cohort 100' else LINE_OF_BUSINESS_DESC end LOB,BH_DX,DX_DESC,MEDICAID_NO, BH_COST_OF_CARE,MED_COST_OF_CARE,RX_COST_OF_CARE,TOTAL_COST_OF_CARE  from ( select distinct STATE_CODE,SRC_MBR_ID ,SUBSCRIBER_ID, MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,MEMB_ADDRESS_LINE_1,MEMB_CITY,                                                                           MEMB_STATE,MEMB_ZIP,LOB,BH_DX,  DX_DESC,                                                                           MEDICAID_NO,   sum(BH_COST_OF_CARE1) OVER (PARTITION BY SRC_MBR_ID order by SRC_MBR_ID)   BH_COST_OF_CARE,   sum(MED_COST_OF_CARE1) OVER (PARTITION BY SRC_MBR_ID order by SRC_MBR_ID)  MED_COST_OF_CARE,   sum(RX_COST_OF_CARE1) OVER (PARTITION BY SRC_MBR_ID order by SRC_MBR_ID)    RX_COST_OF_CARE,   TOTAL_COST_OF_CARE   from ( select STATE_CODE,SRC_MBR_ID , SUBSCRIBER_ID,MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,DOD,MEMB_ADDRESS_LINE_1,MEMB_CITY,MEMB_STATE,MEMB_ZIP,LOB,BH_COST_OF_CARE1,MED_COST_OF_CARE1,MEDICAID_NO,     RX_COST_OF_CARE1,TOTAL_COST_OF_CARE,BH_DX, DIAG1.DIAGNOSIS_SHORT_DESC DX_DESC    from ( select distinct STATE_CODE,SRC_MBR_ID , SUBSCRIBER_ID,MEMB_FIRST_NAME,MEMB_LAST_NAME,DOB,DOD,MEMB_ADDRESS_LINE_1,MEMB_CITY,MEMB_STATE,MEMB_ZIP,LOB,MEDICAID_NO  ,case when CLAIM_TYPE_DIM_ID IN (6,7,8) then sum(PAID_NET_AMT) OVER (PARTITION BY SRC_MBR_ID,CLAIM_TYPE_DIM_ID order by SRC_MBR_ID) else 0  end BH_COST_OF_CARE1, case when CLAIM_TYPE_DIM_ID IN (1,2) then sum(PAID_NET_AMT) OVER (PARTITION BY SRC_MBR_ID,CLAIM_TYPE_DIM_ID order by SRC_MBR_ID)  else 0 end MED_COST_OF_CARE1, case when CLAIM_TYPE_DIM_ID IN (3) then sum(PAID_NET_AMT) OVER (PARTITION BY SRC_MBR_ID,CLAIM_TYPE_DIM_ID order by SRC_MBR_ID) else 0 end RX_COST_OF_CARE1, case when CLAIM_TYPE_DIM_ID IN (1,2,3,6,7,8) then    sum(PAID_NET_AMT) OVER (PARTITION BY SRC_MBR_ID order by SRC_MBR_ID) end TOTAL_COST_OF_CARE,BH_DX          from( select distinct  m.STATE_CODE,m.SRC_MBR_ID ,MBR.SUBSCRIBER_ID,MBR.MEMB_FIRST_NAME,MBR.MEMB_LAST_NAME,MBR.DOB,MBR.DOD,MBR.MEMB_ADDRESS_LINE_1,MBR.MEMB_CITY,MBR.MEMB_STATE,MBR.MEMB_ZIP ,    m.LOB,  first_value(DIAGNOSIS_CODE) over (partition by m.SRC_MBR_ID order by DIAGNOSIS_CODE nulls last)  BH_DX,                    CLAIM_TYPE_DIM_ID,WHOLE_CLAIM_STATUS_DIM_ID,PRIMARY_SVC_DATE,claim_status_dim_id,                 POST_DATE,    MBR.MEDICAID_NO, paid_net_amt,claim_number, line_number,SUB_LINE_CODE    FROM COMPACT.FACT_CLAIM clm   INNER JOIN COMPACT.DIM_COMPANY CMP  ON clm.COMPANY_DIM_ID= CMP.COMPANY_DIM_ID    INNER JOIN  COMPACT.DIM_PLAN PLN ON PLN.PLAN_DIM_ID=CLM.PLAN_DIM_ID    INNER JOIN NORTHSTAR.NS_MBR_INCL_STEP1 m ON  (CLM.memb_dim_id = m.src_mbr_id                   and  m.src_mbr_id   in (select src_mbr_id from NORTHSTAR.NS_MBR_INCL_STEP1 where src_mbr_id not in (select src_mbr_id from NORTHSTAR.NS_MBR_12M_6M_EXCL_STEP2))) INNER JOIN  COMPACT.DIM_MEMBER MBR  ON MBR.MEMB_DIM_ID=CLM.MEMB_DIM_ID    LEFT JOIN COMPACT.DIM_DIAGNOSIS DIAG on    diag.DIAGNOSIS_DIM_ID=clm.DIAGNOSIS_1_DIM_ID LEFT JOIN  COMPACT.DIM_PROCEDURE_CODE PROC  ON clm.CPT_CODE_DIM_ID=PROC.PROCEDURE_DIM_ID   LEFT JOIN COMPACT.DIM_PLACE_OF_SVC PLSVC ON clm.PLACE_OF_SVC_1_DIM_ID= PLSVC.PLACE_OF_SVC_DIM_ID  ) where          CLAIM_TYPE_DIM_ID IN (1,2,6,7,3,8) AND WHOLE_CLAIM_STATUS_DIM_ID=1            and claim_status_dim_id in (SELECT claim_status_dim_id FROM COMPACT.dim_claim_status WHERE claim_status_type_dim_id <> 3)          AND PRIMARY_SVC_DATE between   :1 and :2   AND DOD is null    order by SRC_MBR_ID)     left  join (select * from COMPACT.DIM_DIAGNOSIS where DIAGNOSIS_TERM_DATE> current_date) DIAG1 on    diag1.diagnosis_code=BH_DX    where BH_COST_OF_CARE1 <>0 or MED_COST_OF_CARE1 <>0 or RX_COST_OF_CARE1 <>0 ) where   TOTAL_COST_OF_CARE>1000), COMPACT.DIM_LINE_OF_BUSINESS where LINE_OF_BUSINESS_DIM_ID=LOB     )a  left join FOUNDATION.MSEG_BY_INDIVIDUAL ON  MEMB_FIRST_NAME||MEMB_LAST_NAME||DOB||MEMB_STATE = MBR_FST_NM||MBR_LST_NM|| TO_DATE(TO_VARCHAR (TO_DATE (bth_dt ,'DDMONYYYY'),'YYYY-MM-DD'),'YYYY-MM-DD')||MBR_ST_ABBR_CD and SALES_CHANNEL='C&S'  ";
        var stmtins = snowflake.createStatement({ sqlText: SQLcmdins , binds: [START_DATE, END_DATE]} );
        var resultins = stmtins.execute();
        resultins.next();
       var resultX = resultins.getColumnValue(1);
        }
        else
        {
            SQLcmdupd ="update  NORTHSTAR.NS_MEMBER SET IS_NEW='N' where state_code in (select distinct STATE_CODE from NORTHSTAR.NS_MEMBER_CHNG)";
            var stmtupd = snowflake.createStatement({ sqlText: SQLcmdupd , binds: [START_DATE, END_DATE]} );
            var resultupd = stmtupd.execute();
            resultupd.next();
            var resultX = resultupd.getColumnValue(1);

             if (src_count1 > 0 )
                {     sqlcmdmerge="UPDATE NORTHSTAR.NS_MEMBER TGT SET TGT.IS_NEW = 'N',TGT.IS_ACTIVE = 'Y' ,TGT.REC_CRT_DTTM=TGT.REC_CRT_DTTM, TGT.REC_UPDT_DTTM=SRC.REC_CRT_DTTM ,TGT.BH_COST_OF_CARE  = SRC.BH_COST_OF_CARE , TGT.MED_COST_OF_CARE  = SRC.MED_COST_OF_CARE, TGT.RX_COST_OF_CARE  = SRC.RX_COST_OF_CARE , TGT.TOTAL_COST_OF_CARE = SRC.TOTAL_COST_OF_CARE  FROM NORTHSTAR.NS_MEMBER_CHNG SRC WHERE SRC.STATE_CODE= TGT.STATE_CODE  AND SRC.SRC_MBR_ID=TGT.SRC_MBR_ID AND SRC.SUBSCRIBER_ID= TGT.SUBSCRIBER_ID and TGT.state_code in (select distinct STATE_CODE from NORTHSTAR.NS_MEMBER_CHNG)";
                      var stmtmerge = snowflake.createStatement({ sqlText: sqlcmdmerge , binds: [START_DATE, END_DATE]});
                        var resultmerge = stmtmerge.execute();
                        resultmerge.next();
                        var src_mbr = resultmerge.getColumnValue(1);
                   }

             if (src_count2 > 0 )
                                   {     sqlcmdins="INSERT INTO NORTHSTAR.NS_MEMBER select * from NORTHSTAR.NS_MEMBER_CHNG where STATE_CODE||src_mbr_id not  in (select STATE_CODE||src_mbr_id from NORTHSTAR.NS_MEMBER) and state_code in (select distinct STATE_CODE from NORTHSTAR.NS_MEMBER_CHNG)";
                                         var stmtins = snowflake.createStatement({ sqlText: sqlcmdins , binds: [START_DATE, END_DATE]});
                                           var resultins = stmtins.execute();
                                           resultins.next();
                                           var src_mbr11 = resultins.getColumnValue(1);
                                      }
        }
                if (src_count3 > 0 )
                {
                    sqlcmdupd1= "update  NORTHSTAR.NS_MEMBER SET  REC_UPDT_DTTM=CURRENT_DATE(),IS_ACTIVE='N',IS_NEW='N' where STATE_CODE||src_mbr_id not in (select  STATE_CODE||src_mbr_id from NORTHSTAR.NS_MEMBER_CHNG) and state_code in (select distinct STATE_CODE from NORTHSTAR.NS_MEMBER_CHNG)";
                    var stmtupd1 = snowflake.createStatement({ sqlText: sqlcmdupd1});
                    var resultupd1 = stmtupd1.execute();
                    resultupd1.next();
                    var src_mbr1 = resultupd1.getColumnValue(1);
                }

                SQLcmdACO="CREATE OR REPLACE TEMPORARY TABLE NORTHSTAR.AE_ATTR AS ( SELECT   P.Memb_Dim_Id,p.state,R.CONTRACT_PROGRAM,to_date(:1) START_DT, to_date(:2) END_DT FROM COMPACT.ACO_SNAPSHOT_SUMMARY P   Right Join COMPACT.ACO_tin_List Q     On (P.Irs_Tax_Id=Q.TIN)             AND P.state=Q.state   AND Q.TIN_END_DATE>= to_date(dateadd(day,1,:2))       AND Q.Tin_Status  = 'Active' Right Join COMPACT.ACO_Contracts R                                          On (R.ACCOUNT_ID=Q.ACCOUNT_ID)       AND R.State=Q.State       AND R.Contract_Status = 'Active'      AND R.program_desc not in ('PMPM_BQM')  Right JOIN COMPACT.ACO_PRODUCTS T                                                      ON T.Account_ID = R.Account_id      AND T.Line_of_Business = P.LINE_OF_BUSINESS      AND T.PROGRAM_TYPE_DESC = P.PROGRAM_TYPE_DESC      AND UPPER(T.STATUS) = 'INCLUDE'    INNER JOIN NORTHSTAR.NS_MEMBER ON MEMB_DIM_ID=SRC_MBR_ID AND STATE_CODE=P.STATE WHERE  PERIOD IN (year(START_DT)||lpad (month(START_DT),2,0)||'-'||year(END_DT)||lpad (month(END_DT),2,0)) )";
                var stmtACO = snowflake.createStatement({ sqlText: SQLcmdACO, binds: [START_DATE, END_DATE]} );
                var resultACO = stmtACO.execute();
                resultACO.next();
                var resultACO = resultACO.getColumnValue(1);

                SQLcmdACOupd="UPDATE NORTHSTAR.NS_MEMBER t1 SET t1.AE_NM=t2.CONTRACT_PROGRAM FROM NORTHSTAR.AE_ATTR t2 WHERE t1.src_mbr_id=t2.memb_dim_id and AE_NM is null and STATE_CODE=t2.STATE ";
                var stmtACOupd = snowflake.createStatement({ sqlText: SQLcmdACOupd, binds: [START_DATE, END_DATE]} );
                var resultACOupd = stmtACOupd.execute();
                resultACOupd.next();
                var resultACOupd = resultACOupd.getColumnValue(1);


                SQLcmdEleanor="CREATE OR REPLACE TEMPORARY TABLE NORTHSTAR.AE_ATTR AS ( select MEMB_DIM_ID,DIAGNOSIS cd_value,DIAGNOSIS_SHORT_DESC cd_desc, 'ELEANOR-DIAG' desc1  from    (select distinct  CLM.MEMB_DIM_ID , first_value(DIAGNOSIS_CODE) over (partition by CLM.MEMB_DIM_ID order by DIAGNOSIS_CODE nulls last)  DIAGNOSIS, 'ELEANOR-DIAG'     FROM COMPACT.FACT_CLAIM clm      INNER JOIN ( select distinct MEMB_DIM_ID from NORTHSTAR.NS_MEMBER inner join COMPACT.DIM_MEMBER  MBR ON MBR.MEMB_DIM_ID= SRC_MBR_ID AND  datediff(YEAR, MBR.DOB, :2) >=   (select distinct AGE from NORTHSTAR.CONFIG_AE_AGE where AE_NM='Eleanor') and MBR.MEMB_ZIP in (select ZIPCODE FROM NORTHSTAR.CONFIG_AE_ZIPCODE_INCL where ASSIGNED_ENTITY ='Eleanor Health LA'))MBR ON CLM.MEMB_DIM_ID =MBR.MEMB_DIM_ID  INNER JOIN     (SELECT * FROM COMPACT.DIM_DIAGNOSIS      INNER JOIN NORTHSTAR.CONFIG_AE_SUD_SMI_INCL NS ON DIAGNOSIS_CODE=NS.CODE_VALUE AND NS.CODE_TYPE='SUD') DIAG1   ON (DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_1_DIM_ID or DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_2_DIM_ID    or DIAG1.DIAGNOSIS_DIM_ID = clm.DIAGNOSIS_3_DIM_ID )   AND CLM.PRIMARY_SVC_DATE between :1 and :2   )DIA inner join COMPACT.DIM_DIAGNOSIS DIAG2 on DIA.DIAGNOSIS=DIAG2.DIAGNOSIS_CODE   )";
                var stmtEleanor = snowflake.createStatement({ sqlText: SQLcmdEleanor, binds: [START_DATE, END_DATE]} );
                var resultEleanor = stmtEleanor.execute();
                resultEleanor.next();
                var resultEleanor = resultEleanor.getColumnValue(1);

                SQLcmdEleanorupd="UPDATE NORTHSTAR.NS_MEMBER t1 SET t1.AE_NM='ELEANOR', t1.BH_DX=t2.cd_value , t1.DX_DESC =t2.cd_desc FROM NORTHSTAR.AE_ATTR t2 WHERE t1.src_mbr_id=t2.memb_dim_id and AE_NM is null and STATE_CODE='LA' ";
                var stmtEleanorupd = snowflake.createStatement({ sqlText: SQLcmdEleanorupd, binds: [START_DATE, END_DATE]} );
                var resultEleanorupd = stmtEleanorupd.execute();
                resultEleanorupd.next();
                var resultEleanorupd = resultEleanorupd.getColumnValue(1);

                SQLcmdEleanor1="CREATE OR REPLACE TEMPORARY TABLE NORTHSTAR.AE_ATTR AS (     select MEMB_DIM_ID, PROCEDURE_CODE cd_value, PROCEDURE_CODE_SHORT_DESC cd_desc, desc1 from (   select distinct  CLM.MEMB_DIM_ID ,  first_value(PROCEDURE_CODE) over (partition by CLM.MEMB_DIM_ID order by PROCEDURE_CODE nulls last) PROCEDURE1 ,'ELEANOR-PROC' desc1 FROM COMPACT.FACT_CLAIM clm   INNER JOIN ( select distinct MEMB_DIM_ID from NORTHSTAR.NS_MEMBER inner join COMPACT.DIM_MEMBER  MBR ON MBR.MEMB_DIM_ID= SRC_MBR_ID AND  datediff(YEAR, MBR.DOB, :2) >=  (select distinct AGE from NORTHSTAR.CONFIG_AE_AGE where AE_NM='Eleanor') and MBR.MEMB_ZIP in (select ZIPCODE FROM NORTHSTAR.CONFIG_AE_ZIPCODE_INCL where ASSIGNED_ENTITY ='Eleanor Health LA'))MBR ON CLM.MEMB_DIM_ID =MBR.MEMB_DIM_ID  INNER JOIN (select * from  COMPACT.DIM_PROCEDURE_CODE where PROCEDURE_CODE IN  (select CODE_VALUE FROM NORTHSTAR.CONFIG_AE_SUD_SMI_INCL where code_type='PROC'  )) PROC     ON clm.CPT_CODE_DIM_ID=PROC.PROCEDURE_DIM_ID  AND CLM.PRIMARY_SVC_DATE between :1 and :2 )PROCS INNER JOIN COMPACT.DIM_PROCEDURE_CODE PROC1 where PROCEDURE1= PROC1.PROCEDURE_CODE )";
                var stmtEleanor1 = snowflake.createStatement({ sqlText: SQLcmdEleanor1 , binds: [START_DATE, END_DATE]} );
                var resultEleanor1 = stmtEleanor1.execute();
                resultEleanor1.next();
                var resultEleanor1 = resultEleanor1.getColumnValue(1);

                SQLcmdEleanorupd1="UPDATE NORTHSTAR.NS_MEMBER t1 SET t1.AE_NM='ELEANOR', t1.BH_DX=t2.cd_value , t1.DX_DESC =t2.cd_desc FROM NORTHSTAR.AE_ATTR t2 WHERE t1.src_mbr_id=t2.memb_dim_id and AE_NM is null and STATE_CODE='LA' ";
                var stmtEleanorupd1 = snowflake.createStatement({ sqlText: SQLcmdEleanorupd1 , binds: [START_DATE, END_DATE]} );
                var resultEleanorupd1 = stmtEleanorupd1.execute();
                resultEleanorupd1.next();
                var resultEleanorupd1 = resultEleanorupd1.getColumnValue(1);

                SQLcmdIBHH="CREATE OR REPLACE TEMPORARY TABLE NORTHSTAR.AE_ATTR AS ( select * from (select distinct memb_dim_id,sum(ER_VISIT_CNT) over (partition by memb_dim_id) ER,sum(BH_COST_OF_CARE) over (partition by memb_dim_id) BH,  sum(MED_COST_OF_CARE) over (partition by memb_dim_id) MED, MIN(HOUSTON) over (partition by memb_dim_id,MEMB_ZIP) HOUSTON_TX,MIN(AUSTIN) over (partition by memb_dim_id,MEMB_ZIP) AUSTIN_TX,MEMB_ZIP,ASSIGNED_ENTITY  from (    select distinct  count(distinct memb_dim_id) over (partition by memb_dim_id,priority) cnt, * from ( select Priority,memb_dim_id,place_of_svc_code,ER_VISIT_CNT,BH_COST_OF_CARE,MED_COST_OF_CARE,     case when ( (place_of_svc_code='23' and  ER_VISIT_CNT>=12) or BH_COST_OF_CARE >=12000 or MED_COST_OF_CARE>=120000)  then 'HOUSTON IBHH' end HOUSTON, case when ( (place_of_svc_code='23' and  ER_VISIT_CNT>=6) or BH_COST_OF_CARE >=5000 or MED_COST_OF_CARE>=100000)  then 'AUSTIN IBHH' end AUSTIN,MEMB_ZIP,ASSIGNED_ENTITY                                                               from (  select *,  case when (ER_IN='Y' and count(memb_dim_id) over(partition by memb_dim_id) >0 )and place_of_svc_code='23'  then count(CLAIM_NUMBER||LINE_NUMBER||SUB_LINE_CODE) over (partition by memb_dim_id,place_of_svc_code  order by memb_dim_id ) else 0 end ER_VISIT_CNT   from (select distinct  PRIMARY_SVC_DATE,CLM.CLAIM_NUMBER,CLM.LINE_NUMBER,CLM.SUB_LINE_CODE,CLM.memb_dim_id, place_of_svc_code,MBR.MEMB_ZIP,ASSIGNED_ENTITY,         case when ASSIGNED_ENTITY='Harris Center' then 1 else 2 end priority,                case when CLM.PRIMARY_SVC_DATE between trunc(add_months(add_months(:2 ,-6),1),'MM') and :2 and place_of_svc_code  in ('21','23','51')  then 'Y' else 'N' end ER_IN ,                case when  place_of_svc_code  in ('51','55','56')  then sum(PAID_NET_AMT) OVER (PARTITION BY CLM.memb_dim_id,CLAIM_TYPE_DIM_ID order by CLM.memb_dim_id) else 0  end BH_COST_OF_CARE,                 case when CLAIM_TYPE_DIM_ID IN (1,2) then sum(PAID_NET_AMT) OVER (PARTITION BY CLM.memb_dim_id,CLAIM_TYPE_DIM_ID order by CLM.memb_dim_id)  else 0 end MED_COST_OF_CARE  FROM COMPACT.FACT_CLAIM clm INNER JOIN  NORTHSTAR.NS_MEMBER ON CLM.MEMB_DIM_ID= SRC_MBR_ID    inner join COMPACT.DIM_MEMBER  MBR  ON CLM.MEMB_DIM_ID =MBR.MEMB_DIM_ID INNER JOIN COMPACT.DIM_PLACE_OF_SVC PLSVC ON clm.PLACE_OF_SVC_1_DIM_ID= PLSVC.PLACE_OF_SVC_DIM_ID                INNER JOIN NORTHSTAR.CONFIG_AE_ZIPCODE_INCL ON MBR.MEMB_ZIP=ZIPCODE AND  datediff(YEAR, MBR.DOB, CLM.PRIMARY_SVC_DATE) >=    (select distinct AGE from NORTHSTAR.CONFIG_AE_AGE where AE_NM='IBHH') and MBR.MEMB_ZIP in (select ZIPCODE FROM NORTHSTAR.CONFIG_AE_ZIPCODE_INCL where STATE='TX' )    and CLM.PRIMARY_SVC_DATE between add_months(:2,-15) and :2   and CLM.WHOLE_CLAIM_STATUS_DIM_ID=1   order by clm.memb_dim_id ) ) )  )           order by MEMB_DIM_ID     ) where HOUSTON_TX is not null or Austin_TX is not null      )";
                var stmtIBHH = snowflake.createStatement({ sqlText: SQLcmdIBHH , binds: [START_DATE, END_DATE]} );
                var resultIBHH = stmtIBHH.execute();
                resultIBHH.next();
                var resultIBHH = resultIBHH.getColumnValue(1);

                SQLcmdIBHHupd="UPDATE NORTHSTAR.NS_MEMBER t1 SET t1.AE_NM='HOUSTON IBHH' FROM NORTHSTAR.AE_ATTR t2 WHERE t1.src_mbr_id=t2.memb_dim_id and AE_NM is null and ASSIGNED_ENTITY like 'Harris%' and STATE_CODE='TX' ";
                var stmtIBHHupd = snowflake.createStatement({ sqlText: SQLcmdIBHHupd , binds: [START_DATE, END_DATE]} );
                var resultIBHHupd = stmtIBHHupd.execute();
                resultIBHHupd.next();
                var resultIBHHupd = resultIBHHupd.getColumnValue(1);

                SQLcmdIBHHupd1="UPDATE NORTHSTAR.NS_MEMBER t1 SET t1.AE_NM='AUSTIN IBHH' FROM NORTHSTAR.AE_ATTR t2 WHERE t1.src_mbr_id=t2.memb_dim_id and AE_NM is null and ASSIGNED_ENTITY like 'Austin%' and STATE_CODE='TX' ";
                var stmtIBHHupd1 = snowflake.createStatement({ sqlText: SQLcmdIBHHupd1 , binds: [START_DATE, END_DATE]} );
                var resultIBHHupd1 = stmtIBHHupd1.execute();
                resultIBHHupd1.next();
                var resultIBHHupd1 = resultIBHHupd1.getColumnValue(1);

                SQLcmdFSP="CREATE OR REPLACE TEMPORARY TABLE NORTHSTAR.AE_ATTR AS (select memb_dim_id,'FSP' as desc from (select * from NORTHSTAR.NS_MEMBER NS inner join COMPACT.DIM_MEMBER  MBR ON MBR.MEMB_DIM_ID= NS.SRC_MBR_ID AND    datediff(YEAR, MBR.DOB, :2) <=  (select distinct AGE from NORTHSTAR.CONFIG_AE_AGE where AE_NM='FSP'))MBR    )";
                var stmtFSP = snowflake.createStatement({ sqlText: SQLcmdFSP , binds: [START_DATE, END_DATE]} );
                var resultFSP = stmtFSP.execute();
                resultFSP.next();
                var resultFSP = resultFSP.getColumnValue(1);

                SQLcmdFSPupd="UPDATE NORTHSTAR.NS_MEMBER t1 SET t1.AE_NM='FSP' FROM NORTHSTAR.AE_ATTR t2 WHERE t1.src_mbr_id=t2.memb_dim_id and AE_NM is null";
                var stmtFSPupd = snowflake.createStatement({ sqlText: SQLcmdFSPupd , binds: [START_DATE, END_DATE]} );
                var resultFSPupd = stmtFSPupd.execute();
                resultFSPupd.next();
                var resultFSPupd = resultFSPupd.getColumnValue(1);

               SQLcmdCNupd="UPDATE NORTHSTAR.NS_MEMBER t1 SET t1.AE_NM='CARE NAVIGATION'  WHERE  AE_NM is null";
                var stmtCNupd = snowflake.createStatement({ sqlText: SQLcmdCNupd , binds: [START_DATE, END_DATE]} );
                 var resultCNupd = stmtCNupd.execute();
                 resultCNupd.next();
                 var resultCNupd = resultCNupd.getColumnValue(1);

     result11=src_mbr1;
     return result11;

}
    catch (err) {
        result =  "Failed: Code: " + err.code + ", State: " + err.state;
        result += "\n Message: " + err.message;
        result += "\n Stack Trace:\n" + err.stackTraceTxt;
        throw result;
       }
$$
;
