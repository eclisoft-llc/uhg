CREATE  OR REPLACE PROCEDURE ECT_DEV_OBH_DP_DB.FOUNDATION.OCM_DIM_CLM_TRANS_HIS_LOAD_PROC()
RETURNS VARCHAR
LANGUAGE javascript
COMMENT='Loads the data from multiple tables in OCM Claims DB Foundation layer into OCM_DIM_CLM_TRANS table in OBHDB Foundation layer'
EXECUTE as caller
AS
$$
    var result = "";
    try {
        var delete_stmt = snowflake.createStatement({sqlText:"DELETE FROM ECT_DEV_OBH_DP_DB.FOUNDATION.OCM_DIM_CLM_TRANS WHERE CLM_AUD_SRC_SYS_CD = 'COSM';"});
        delete_stmt.execute();
        var sql_DIM_CLM_command = "INSERT INTO ECT_DEV_OBH_DP_DB.FOUNDATION.OCM_DIM_CLM_TRANS( CLM_TRANS_SYS_ID, CLM_AUD_LN_NBR, CLM_AUD_NBR, CLM_AUD_SRC_SYS_CD, CLM_SRC_COSM_DIV_CD, CLM_SRC_PROV_CLM_REF_NPI_ID, CLM_TRANS_DT_SRVC_FROM_DT, CLM_TRANS_DT_SRVC_THRU_DT, CLM_TRANS_PL_OF_SRVC_SRC_CD, CLM_TRANS_PROC_MOD_2_CD, CLM_TRANS_PROC_MOD_3_CD, CLM_TRANS_PROC_MOD_4_CD, CLM_TRANS_PROC_MOD_CD, CLM_TRANS_PROV_NTWK_DERIV_CD, CLM_TRANS_RVNU_CD, CLM_TRANS_RVNU_DESC, CLM_ETL_DW_FROM_DT, CLM_SRC_PROV_CLM_BIL_NPI_ID, CLM_SRC_PROV_CLM_NPI_ID, CLM_SRC_PROV_CLM_SRVC_NPI_ID, CLM_SRC_PROV_TAX_ID_NBR, CLM_TRANS_ADMIT_SRC_CD, CLM_TRANS_ADMIT_TYP_CD, CLM_TRANS_BEN_LVL_SRC_CD, CLM_TRANS_BILL_TYP_CD, CLM_TRANS_CHK_NBR, CLM_TRANS_CLM_FM_TYP_CD, CLM_TRANS_DSCHRG_STS_CD, CLM_TRANS_DT_ADJD_DT, CLM_TRANS_DT_ADMIT_DT, CLM_TRANS_DT_CLM_FST_SRVC_DT, CLM_TRANS_DT_CLM_LST_SRVC_DT, CLM_TRANS_DT_ENT_DT, CLM_TRANS_DT_PD_DT, CLM_TRANS_DT_PST_DT, CLM_TRANS_DT_RCVD_DT, CLM_TRANS_PRI_PAYE_CD, CLM_TRANS_PRI_PAYE_CD_DESC, CLM_TRANS_SBMT_SRC_DESC, DERIV_OBH_FINC_LIAB, CLM_SRC_MBR_CUST_SEG_NBR, CLM_SRC_MBR_DEPN_CD, CLM_SRC_MBR_SBSCR_ID, CLM_TRANS_CLM_PRI_DIAG_CD, CLM_TRANS_DIAG_1_CD, CLM_TRANS_DIAG_2_CD, CLM_TRANS_ENT_DIAG_REL_GRP_CD, CLM_TRANS_SEC_PROC_CD, CLM_TRANS_SEC_PROC_DESC, ICD_DIAG_TYP_CD, CLM_TRANS_PROC_CD, CLM_TRANS_PROC_DESC ) SELECT DISTINCT CLM_SRVC_LN.DW_CLM_SRVC_LN_REC_ID CLM_TRANS_SYS_ID, CASE WHEN length(CLM_SRVC_LN.CLM_SRVC_LN_ID) = 1 THEN CONCAT('00',CLM_SRVC_LN.CLM_SRVC_LN_ID) WHEN length(CLM_SRVC_LN.CLM_SRVC_LN_ID) = 2 THEN CONCAT('0',CLM_SRVC_LN.CLM_SRVC_LN_ID) ELSE CLM_SRVC_LN.CLM_SRVC_LN_ID END CLM_AUD_LN_NBR, SPLIT_PART(CLM_SRVC_LN.CLM_TRANS_ID, ':' , 2) CLM_AUD_NBR, 'COSM' CLM_AUD_SRC_SYS_CD, SUBSTR(CLM_SRVC_LN.CLM_TRANS_ID,1,3) CLM_SRC_COSM_DIV_CD, CLM_SRVC_LN.REF_PROV_NPI CLM_SRC_PROV_CLM_REF_NPI_ID, CLM_SRVC_LN.SRVC_DT CLM_TRANS_DT_SRVC_FROM_DT, CLM_SRVC_LN.SRVC_END_DT CLM_TRANS_DT_SRVC_THRU_DT, CLM_SRVC_LN.PLSRV_CD CLM_TRANS_PL_OF_SRVC_SRC_CD, CLM_SRVC_LN.PROC_MOD_2_CD CLM_TRANS_PROC_MOD_2_CD, CLM_SRVC_LN.PROC_MOD_3_CD CLM_TRANS_PROC_MOD_3_CD, CLM_SRVC_LN.PROC_MOD_4_CD CLM_TRANS_PROC_MOD_4_CD, CLM_SRVC_LN.PROC_MOD_1_CD CLM_TRANS_PROC_MOD_CD, CLM_SRVC_LN.OON_SRVC_IND CLM_TRANS_PROV_NTWK_DERIV_CD, CLM_SRVC_LN.RVNU_CD CLM_TRANS_RVNU_CD, CLM_SRVC_LN.RVNU_CD_DESC CLM_TRANS_RVNU_DESC, CLM_TRANS.STRT_SRVC_DT CLM_ETL_DW_FROM_DT, CLM_TRANS.BIL_PROV_NPI CLM_SRC_PROV_CLM_BIL_NPI_ID, CASE WHEN CLM_TRANS.RNDR_PROV_NPI IS NOT NULL THEN CLM_TRANS.RNDR_PROV_NPI WHEN CLM_TRANS.BIL_PROV_NPI IS NOT NULL THEN CLM_TRANS.BIL_PROV_NPI ELSE NULL END CLM_SRC_PROV_CLM_NPI_ID, CASE WHEN CLM_TRANS.CLM_ADJD_PLTFM_CD = 'Hospital' THEN CLM_TRANS.FACL_PROV_NPI WHEN CLM_TRANS.CLM_ADJD_PLTFM_CD = 'Professional' THEN CLM_SRVC_LN.RNDR_PROV_NPI END CLM_SRC_PROV_CLM_SRVC_NPI_ID, CLM_TRANS.BIL_PROV_TIN CLM_SRC_PROV_TAX_ID_NBR, CLM_TRANS.ADMIS_SRC_CD CLM_TRANS_ADMIT_SRC_CD, CLM_TRANS.ADMIS_TYP_CD CLM_TRANS_ADMIT_TYP_CD, CLM_TRANS.BEN_LVL_CAUS_CD CLM_TRANS_BEN_LVL_SRC_CD, CLM_TRANS.CLM_BIL_TYP CLM_TRANS_BILL_TYP_CD, CLM_TRANS.CHK_PAY_TRK_NBR CLM_TRANS_CHK_NBR, CASE WHEN CLM_TRANS.CLM_ADJD_PLTFM_CD = 'Hospital' THEN 1 WHEN CLM_TRANS.CLM_ADJD_PLTFM_CD = 'Professional' THEN 2 END CLM_TRANS_CLM_FM_TYP_CD, CONCAT('0',CLM_TRANS.DSCHRG_STS_CD) CLM_TRANS_DSCHRG_STS_CD, CLM_TRANS.CLM_ADJ_DT CLM_TRANS_DT_ADJD_DT, CLM_TRANS.ADMIS_DTTM CLM_TRANS_DT_ADMIT_DT, CLM_TRANS.STRT_SRVC_DT CLM_TRANS_DT_CLM_FST_SRVC_DT, CLM_TRANS.END_SRVC_DT CLM_TRANS_DT_CLM_LST_SRVC_DT, CLM_TRANS.CLM_ADJD_DT CLM_TRANS_DT_ENT_DT, CLM_TRANS.CHK_ISS_DT CLM_TRANS_DT_PD_DT, CLM_TRANS.CHK_ISS_DT CLM_TRANS_DT_PST_DT, CLM_TRANS.CLM_RECPT_DT CLM_TRANS_DT_RCVD_DT, CLM_TRANS.CLM_PAYE_ASGN_CD CLM_TRANS_PRI_PAYE_CD, CLM_TRANS.CLM_PAYE_ASGN_DESC CLM_TRANS_PRI_PAYE_CD_DESC, CLM_TRANS.CLM_SBMT_METH_CD CLM_TRANS_SBMT_SRC_DESC, CASE WHEN CLM_TRANS.CLM_TYP_CD = 'U' THEN 'TRUE' ELSE 'FALSE' END DERIV_OBH_FINC_LIAB, CONCAT(SUBSTR(CLM_OTHR_PAYR_SBSCR.CLM_TRANS_ID,1,3),'0',CLM_OTHR_PAYR_SBSCR.SBSCR_POL_NBR) CLM_SRC_MBR_CUST_SEG_NBR, CASE WHEN length(CLM_OTHR_PAYR_SBSCR.ELIG_REL_CD) = 1 THEN CONCAT('00',CLM_OTHR_PAYR_SBSCR.ELIG_REL_CD) WHEN length(CLM_OTHR_PAYR_SBSCR.ELIG_REL_CD) = 2 THEN CONCAT('0',CLM_OTHR_PAYR_SBSCR.ELIG_REL_CD) ELSE ELIG_REL_CD END CLM_SRC_MBR_DEPN_CD, CONCAT('00',CLM_OTHR_PAYR_SBSCR.SBSCR_MBR_NBR) CLM_SRC_MBR_SBSCR_ID, CASE WHEN CLM_DIAG_CD.DIAG_PRR_SEQ_NBR = 1 THEN CLM_DIAG_CD.DIAG_CD END CLM_TRANS_CLM_PRI_DIAG_CD, CASE WHEN CLM_DIAG_CD.DIAG_PRR_SEQ_NBR = 1 THEN CLM_DIAG_CD.DIAG_CD END CLM_TRANS_DIAG_1_CD, CASE WHEN CLM_DIAG_CD.DIAG_PRR_SEQ_NBR = 2 THEN CLM_DIAG_CD.DIAG_CD END CLM_TRANS_DIAG_2_CD, CLM_DIAG_REL_GRP_CD.DIAG_REL_GRP_CD CLM_TRANS_ENT_DIAG_REL_GRP_CD, CLM_ICD_PROC_CD.ICD_PROC_CD CLM_TRANS_SEC_PROC_CD, CLM_ICD_PROC_CD.ICD_PROC_CD_DESC CLM_TRANS_SEC_PROC_DESC, CLM_ICD_PROC_CD.ICD_VER ICD_DIAG_TYP_CD, CASE WHEN CLM_TRANS.CLM_ADJD_PLTFM_CD = 'Hospital' THEN CLM_SRVC_LN.RVNU_CD WHEN CLM_TRANS.CLM_ADJD_PLTFM_CD = 'Professional' THEN CLM_ICD_PROC_CD.ICD_PROC_CD END CLM_TRANS_PROC_CD, CASE WHEN CLM_TRANS.CLM_ADJD_PLTFM_CD = 'Hospital' THEN CLM_SRVC_LN.RVNU_CD_DESC WHEN CLM_TRANS.CLM_ADJD_PLTFM_CD = 'Professional' THEN CLM_ICD_PROC_CD.ICD_PROC_CD_DESC END CLM_TRANS_PROC_DESC FROM ECT_DEV_CLAIMS_DB.FOUNDATION.DW_CLM_SRVC_LN CLM_SRVC_LN  INNER JOIN ECT_DEV_CLAIMS_DB.FOUNDATION.DW_CLM_TRANS CLM_TRANS ON CLM_SRVC_LN.CLM_TRANS_ID = CLM_TRANS.CLM_TRANS_ID LEFT JOIN ECT_DEV_CLAIMS_DB.FOUNDATION.DW_CLM_OTHR_PAYR_SBSCR CLM_OTHR_PAYR_SBSCR ON CLM_OTHR_PAYR_SBSCR.CLM_TRANS_ID = CLM_TRANS.CLM_TRANS_ID LEFT JOIN ECT_DEV_CLAIMS_DB.FOUNDATION.DW_CLM_DIAG_CD CLM_DIAG_CD ON CLM_DIAG_CD.CLM_TRANS_ID = CLM_TRANS.CLM_TRANS_ID LEFT JOIN ECT_DEV_CLAIMS_DB.FOUNDATION.DW_CLM_DIAG_REL_GRP_CD CLM_DIAG_REL_GRP_CD ON CLM_DIAG_REL_GRP_CD.CLM_TRANS_ID = CLM_TRANS.CLM_TRANS_ID LEFT JOIN ECT_DEV_CLAIMS_DB.FOUNDATION.DW_CLM_ICD_PROC_CD CLM_ICD_PROC_CD ON CLM_ICD_PROC_CD.CLM_TRANS_ID = CLM_TRANS.CLM_TRANS_ID WHERE CLM_SRVC_LN.CLM_SRC_SYS_CD='COS';"
        var insert_stmt = snowflake.createStatement({ sqlText: sql_DIM_CLM_command } );
        insert_stmt.execute();
        result = "SUCCESS";
    }
    catch (err) {
         result =  "Failed: Code: " + err.code + "\n  State: " + err.state;
         result += "\n  Message: " + err.message;
         result += "\nStack Trace:\n" + err.stackTraceTxt;
    }
    return result;
$$;