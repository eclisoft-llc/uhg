import pandas as pd
import argparse
import cx_Oracle
import snowflake.connector
from cryptography.hazmat.backends import default_backend
from cryptography.hazmat.primitives import serialization
from datetime import date

### Main ###

parser = argparse.ArgumentParser(description='Validation Script')
parser.add_argument("--sfact", action="store", dest="sf_act_name", required=True, help="Snowflake Account Name")
parser.add_argument("--sfuser", action="store", dest="sf_username", required=True, help="Snowflake User Name")
parser.add_argument("--pkeypath", action="store", dest="keypath", required=True, help="P8 key path")
parser.add_argument("--sfrole", action="store", dest="sf_role", required=True, help="Snowflake role")
parser.add_argument("--sfwh", action="store", dest="sf_wh", required=True, help="Snowflake warehouse")
parser.add_argument("--sfdb", action="store", dest="sf_db", required=True, help="Snowflake database")
parser.add_argument("--psphrs", action="store", dest="passphrase", required=True, help="Passphrase")
parser.add_argument("--oradsn", action="store", dest="ora_db", required=True, help="Oracle Connection")
parser.add_argument("--orauser", action="store", dest="ora_usr", required=True, help="Oracle user")
parser.add_argument("--orapwd", action="store", dest="ora_pwd", required=True, help="Oracle password")
parser.add_argument("--diffpath", action="store", dest="diffpath", required=True, help="Path for difference files")
args = parser.parse_args()

with open (args.keypath, "rb") as key:
    p_key= serialization.load_pem_private_key(
        key.read(),
        password=args.passphrase.encode(),
        backend=default_backend()
    )
pkb = p_key.private_bytes(
    encoding=serialization.Encoding.DER,
    format=serialization.PrivateFormat.PKCS8,
    encryption_algorithm=serialization.NoEncryption())

sf_conn = snowflake.connector.connect(
    account=args.sf_act_name,
    user=args.sf_username,
    private_key=pkb,
    role=args.sf_role,
    warehouse=args.sf_wh,
    database=args.sf_db
)

ora_conn = cx_Oracle.connect(
    user=args.ora_usr,
    password=args.ora_pwd,
    dsn=args.ora_db)

diff_path = args.diffpath

def execute_compare(query1, query2, tbname, yearn, monthn, dayn):
    try:

        s1 = pd.read_sql(query1, con=sf_conn)
        s2 = pd.read_sql(query2, con=ora_conn)

        s1 = s1.replace('None','', regex=True)
        s2 = s2.replace('None','', regex=True)

        s1 = s1.fillna('')
        s2 = s2.fillna('')

        df_diff2 = pd.concat([s2, s1], keys=['Oracle', 'Snowflake']).drop_duplicates(keep=False)

        if(df_diff2.size>0):
            df_diff2.to_csv(diff_path + tbname + '_' + yearn + '_' + monthn + '_' + dayn + '_Diffs.csv')

    except Exception as e:
        print(e, e.args)
        raise


input_list = {
    'FACT_CLAIM': ['COMPANY_DIM_ID', 'TO_CHAR(SEQ_CLAIM_ID)', 'LINE_NUMBER', 'SUB_LINE_CODE', 'EXTRACT(YEAR FROM PRIMARY_SVC_DATE) PRIMARY_SVC_DATE_Y', 'EXTRACT(MONTH FROM PRIMARY_SVC_DATE) PRIMARY_SVC_DATE_M', 'EXTRACT(DAY FROM PRIMARY_SVC_DATE) PRIMARY_SVC_DATE_D', 'PLAN_DIM_ID', 'CLAIM_NUMBER', 'CLAIM_TYPE_DIM_ID', 'IO_FLAG_DIM_ID', 'CLAIM_STATUS_DIM_ID', 'PROCESSING_STATUS_DIM_ID', 'MED_DEF_CODE_DIM_ID', 'EXTRACT(YEAR FROM POST_DATE) POST_DATE_Y', 'EXTRACT(MONTH FROM POST_DATE) POST_DATE_M', 'EXTRACT(DAY FROM POST_DATE) POST_DATE_D', 'EXTRACT(YEAR FROM CHECK_DATE) CHECK_DATE_Y', 'EXTRACT(MONTH FROM CHECK_DATE) CHECK_DATE_M', 'EXTRACT(DAY FROM CHECK_DATE) CHECK_DATE_D', 'CHECK_NUMBER', 'CHECK_NUMBER_2', 'CPT_CODE_DIM_ID', 'CPT_MODIFIER_DIM_ID', 'REVENUE_CODE_DIM_ID', 'EXTRACT(YEAR FROM DATE_RECEIVED) DATE_RECEIVED_Y', 'EXTRACT(MONTH FROM DATE_RECEIVED) DATE_RECEIVED_M', 'EXTRACT(DAY FROM DATE_RECEIVED) DATE_RECEIVED_D', 'EXTRACT(YEAR FROM ADJUD_DATE) ADJUD_DATE_Y', 'EXTRACT(MONTH FROM ADJUD_DATE) ADJUD_DATE_M', 'EXTRACT(DAY FROM ADJUD_DATE) ADJUD_DATE_D', 'EXTRACT(YEAR FROM DETAIL_SVC_DATE) DETAIL_SVC_DATE_Y', 'EXTRACT(MONTH FROM DETAIL_SVC_DATE) DETAIL_SVC_DATE_M', 'EXTRACT(DAY FROM DETAIL_SVC_DATE) DETAIL_SVC_DATE_D', 'EXTRACT(YEAR FROM SVC_TO_DATE) SVC_TO_DATE_Y', 'EXTRACT(MONTH FROM SVC_TO_DATE) SVC_TO_DATE_M', 'EXTRACT(DAY FROM SVC_TO_DATE) SVC_TO_DATE_D', 'PROV_DIM_ID', 'MEMB_DIM_ID', 'ALLOWED_REASON_DIM_ID', 'NOT_COVERED_REASON_DIM_ID', 'ADJUSTMENT_REASON_DIM_ID', 'EXTRACT(YEAR FROM CLAIM_THRU_DATE) CLAIM_THRU_DATE_Y', 'EXTRACT(MONTH FROM CLAIM_THRU_DATE) CLAIM_THRU_DATE_M', 'EXTRACT(DAY FROM CLAIM_THRU_DATE) CLAIM_THRU_DATE_D', 'MEMBER_AGE', 'PCP_DIM_ID', 'ATT_PROV_DIM_ID', 'PROV_SPEC_DIM_ID', 'PROV_TYPE_DIM_ID', 'PLACE_OF_SVC_1_DIM_ID', 'PLACE_OF_SVC_2_DIM_ID', 'PLACE_OF_SVC_3_DIM_ID', 'DIAGNOSIS_1_DIM_ID', 'DIAGNOSIS_2_DIM_ID', 'DIAGNOSIS_3_DIM_ID', 'DIAGNOSIS_4_DIM_ID', 'DIAGNOSIS_5_DIM_ID', 'DRG_CODE_DIM_ID', 'ICD_PRIM_DIAG', 'ICD_FLAG', 'ICD_PROC_1_DIM_ID', 'ICD_PROC_2_DIM_ID', 'ICD_PROC_3_DIM_ID', 'ICD_PROC_4_DIM_ID', 'ICD_PROC_5_DIM_ID', 'PAT_CONTROL_NO', 'EXTRACT(YEAR FROM ACTUAL_ADMISSION_DATE) ACTUAL_ADMISSION_DATE_Y', 'EXTRACT(MONTH FROM ACTUAL_ADMISSION_DATE) ACTUAL_ADMISSION_DATE_M', 'EXTRACT(DAY FROM ACTUAL_ADMISSION_DATE) ACTUAL_ADMISSION_DATE_D', 'EXTRACT(YEAR FROM ADMISSION_DATE) ADMISSION_DATE_Y', 'EXTRACT(MONTH FROM ADMISSION_DATE) ADMISSION_DATE_M', 'EXTRACT(DAY FROM ADMISSION_DATE) ADMISSION_DATE_D', 'ADMIT_HOUR', 'ADMIT_SOURCE_DIM_ID', 'ADMIT_TYPE', 'ADMITTING_DIAGNOSIS_DIM_ID', 'DISCHARGE_HOUR', 'MEDICAL_RECORD_NO', 'EPSDT_IND', 'HCPCS_MODIFIER_1_DIM_ID', 'HCPCS_MODIFIER_2_DIM_ID', 'HCPCS_MODIFIER_3_DIM_ID', 'HCPCS_MODIFIER_4_DIM_ID', 'INVALID_DATA_IND', 'EXTRACT(YEAR FROM STATE_SUBMIT_DATE) STATE_SUBMIT_DATE_Y', 'EXTRACT(MONTH FROM STATE_SUBMIT_DATE) STATE_SUBMIT_DATE_M', 'EXTRACT(DAY FROM STATE_SUBMIT_DATE) STATE_SUBMIT_DATE_D', 'EXTERNAL_CRN', 'BILL_TYPE_DIM_ID', 'LINE_OF_BUSINESS_DIM_ID', 'PATIENT_STATUS', 'EXTRACT(YEAR FROM DIAMOND_INSERT_DATE) DIAMOND_INSERT_DATE_Y', 'EXTRACT(MONTH FROM DIAMOND_INSERT_DATE) DIAMOND_INSERT_DATE_M', 'EXTRACT(DAY FROM DIAMOND_INSERT_DATE) DIAMOND_INSERT_DATE_D', 'VEND_DIM_ID', 'MEDIA_CODE_DIM_ID', 'AUTO_ADJUD_FLAG_DIM_ID', 'EDI_FLAG_DIM_ID', 'ER_FLAG_DIM_ID', 'UNCLEAN_FLAG_DIM_ID', 'QUANTITY', 'OTHER_CARRIER_AMT', 'BILLED_AMT', 'ALLOWED_AMT', 'NOT_COVERED_AMT', 'NET_AMT', 'PAID_NET_AMT', 'EXTRACT(YEAR FROM DW_INSERT_DATETIME) DW_INSERT_DATETIME_Y', 'EXTRACT(MONTH FROM DW_INSERT_DATETIME) DW_INSERT_DATETIME_M', 'EXTRACT(DAY FROM DW_INSERT_DATETIME) DW_INSERT_DATETIME_D', 'EXTRACT(YEAR FROM DW_UPDATE_DATETIME) DW_UPDATE_DATETIME_Y', 'EXTRACT(MONTH FROM DW_UPDATE_DATETIME) DW_UPDATE_DATETIME_M', 'EXTRACT(DAY FROM DW_UPDATE_DATETIME) DW_UPDATE_DATETIME_D', 'INTEREST_AMT', 'WHOLE_CLAIM_STATUS_DIM_ID', 'PROVIDER_PAR_DIM_ID', 'COPAYMENT_1_AMT', 'COPAYMENT_2_AMT', 'DEDUCTIBLE_AMT', 'CALC_ALLO_PAID_NET_AMT', 'CALC_ALLO_LINE_NUMBER', 'COS_STL_4_DIM_ID', 'CONVERTED_FROM_DIM_ID', 'RX_GENERIC_BRAND_IND_DIM_ID', 'RX_SUPPLY_DAYS', 'CALC_ALLO_METHOD', 'CALC_VISITS', 'CALC_UNITS', 'CALC_PROCEDURES', 'CALC_DAYS', 'CALC_ADMITS', 'DTL_COS_STL_4_DIM_ID', 'GROUP_DIM_ID', 'PRODUCT_DIM_ID', 'DIAGNOSIS_6_DIM_ID', 'DIAGNOSIS_7_DIM_ID', 'DIAGNOSIS_8_DIM_ID', 'DIAGNOSIS_9_DIM_ID', 'TOTAL_BILLED_AMT', 'BATCH_NUMBER', 'CALC_QUANTITY', 'AUTH_NUMBER', 'DUPLICATE_CLAIM_FLAG_DIM_ID', 'DISCOUNT_AMT', 'WITHHOLD_AMT', 'EXTRACT(YEAR FROM ORIG_CHECK_DATE) ORIG_CHECK_DATE_Y', 'EXTRACT(MONTH FROM ORIG_CHECK_DATE) ORIG_CHECK_DATE_M', 'EXTRACT(DAY FROM ORIG_CHECK_DATE) ORIG_CHECK_DATE_D', 'ORIG_CHECK_NUMBER', 'EXTRACT(YEAR FROM RPS_FISCAL_DATE) RPS_FISCAL_DATE_Y', 'EXTRACT(MONTH FROM RPS_FISCAL_DATE) RPS_FISCAL_DATE_M', 'EXTRACT(DAY FROM RPS_FISCAL_DATE) RPS_FISCAL_DATE_D', 'COSMOS_CUST_SEG_DIM_ID', 'NDC_CODE_DIM_ID', 'RX_DISPENSING_FEE_AMT', 'RX_INGREDIENT_AMT', 'RX_FORMULARY_IND_DIM_ID', 'CARE_LEVEL_DIM_ID', 'DW_INSERT_PROCESS', 'DW_UPDATE_PROCESS', 'SYS1', 'SYS2', 'SYS3', 'SYS4', 'SYS5', 'SYS6', 'PLAN_LOB_DIM_ID', 'CONTRACT_DIM_ID', 'EOB_IND_DIM_ID', 'OC_ALLOWED_AMT', 'OC_PAID_REASON_DIM_ID', 'EXTRACT(YEAR FROM RX_DATE_PRESCRIPTION_WRITTEN) RX_DATE_PRESCRIPTION_WRITTEN_Y', 'EXTRACT(MONTH FROM RX_DATE_PRESCRIPTION_WRITTEN) RX_DATE_PRESCRIPTION_WRITTEN_M', 'EXTRACT(DAY FROM RX_DATE_PRESCRIPTION_WRITTEN) RX_DATE_PRESCRIPTION_WRITTEN_D', 'SEQ_AP_TRANS_ID', 'REF_PROV_DIM_ID', 'PCP_TYPE_DIM_ID', 'PCP_SPEC_DIM_ID', 'GL_TAG_DIM_ID', 'RX_PRESCRIPTION_NUMBER', 'RX_ORIG_BILLED_AMT', 'ORIG_BATCH_NUMBER', 'DIAGNOSIS_10_DIM_ID', 'DIAGNOSIS_11_DIM_ID', 'DIAGNOSIS_12_DIM_ID', 'DIAGNOSIS_13_DIM_ID', 'DIAGNOSIS_14_DIM_ID', 'DIAGNOSIS_15_DIM_ID', 'DIAGNOSIS_16_DIM_ID', 'DIAGNOSIS_17_DIM_ID', 'DIAGNOSIS_18_DIM_ID', 'CPT_MODIFIER_2_DIM_ID', 'CPT_MODIFIER_3_DIM_ID', 'CPT_MODIFIER_4_DIM_ID', 'COB_CARRIER_CODE_DIM_ID', 'EOB_ATTACHED', 'ORIG_DRG_DIM_ID', 'ICD_PROC_6_DIM_ID', 'EXTRACT(YEAR FROM ICD_PROC_1_DATE) ICD_PROC_1_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_1_DATE) ICD_PROC_1_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_1_DATE) ICD_PROC_1_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_2_DATE) ICD_PROC_2_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_2_DATE) ICD_PROC_2_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_2_DATE) ICD_PROC_2_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_3_DATE) ICD_PROC_3_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_3_DATE) ICD_PROC_3_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_3_DATE) ICD_PROC_3_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_4_DATE) ICD_PROC_4_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_4_DATE) ICD_PROC_4_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_4_DATE) ICD_PROC_4_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_5_DATE) ICD_PROC_5_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_5_DATE) ICD_PROC_5_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_5_DATE) ICD_PROC_5_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_6_DATE) ICD_PROC_6_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_6_DATE) ICD_PROC_6_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_6_DATE) ICD_PROC_6_DATE_D', 'SOI_DIM_ID', 'ROM_DIM_ID', 'CLAIM_IMAGE_ID', 'ORIG_SEQ_CLAIM_ID', 'DIAGNOSIS_1_POA', 'DIAGNOSIS_2_POA', 'DIAGNOSIS_3_POA', 'DIAGNOSIS_4_POA', 'DIAGNOSIS_5_POA', 'DIAGNOSIS_6_POA', 'DIAGNOSIS_7_POA', 'DIAGNOSIS_8_POA', 'DIAGNOSIS_9_POA', 'DIAGNOSIS_10_POA', 'DIAGNOSIS_11_POA', 'DIAGNOSIS_12_POA', 'DIAGNOSIS_13_POA', 'DIAGNOSIS_14_POA', 'DIAGNOSIS_15_POA', 'DIAGNOSIS_16_POA', 'DIAGNOSIS_17_POA', 'DIAGNOSIS_18_POA', 'FEE_SCHEDULE_DIM_ID', 'CLAIM_NUMBER_ADJ_FROM', 'CLAIM_NUMBER_ADJ_TO', 'BIRTH_WEIGHT', 'RX_GPI_DIM_ID', 'RX_BILLING_ACCT_DIM_ID', 'MEDICARE_TYPE_DIM_ID', 'CONDITION_CODE_1_DIM_ID', 'CONDITION_CODE_2_DIM_ID', 'CONDITION_CODE_3_DIM_ID', 'CONDITION_CODE_4_DIM_ID', 'CONDITION_CODE_5_DIM_ID', 'CONDITION_CODE_6_DIM_ID', 'CONDITION_CODE_7_DIM_ID', 'CONDITION_CODE_8_DIM_ID', 'CONDITION_CODE_9_DIM_ID', 'CONDITION_CODE_10_DIM_ID', 'CONDITION_CODE_11_DIM_ID', 'ADJ_SEQ_CLAIM_ID', 'PRICER_BASE_REIMB_AMT', 'PRICER_OUTLIER_PAYMENTS_AMT', 'PRICER_ALT_LEVEL_CARE_PYMT_AMT', 'PRICER_TOTAL_REIMB_AMT', 'PRICER_OUTLIER_TYPE_DIM_ID', 'PRICER_AVERAGE_LOS', 'ADJUDICATION_METHOD_DIM_ID', 'EFT_TRANS_NUMBER', 'ATT_PROV_NPI', 'PROVIDER_NPI', 'DIAGNOSIS_19_DIM_ID', 'DIAGNOSIS_20_DIM_ID', 'DIAGNOSIS_21_DIM_ID', 'DIAGNOSIS_22_DIM_ID', 'DIAGNOSIS_23_DIM_ID', 'DIAGNOSIS_24_DIM_ID', 'DIAGNOSIS_25_DIM_ID', 'DIAGNOSIS_19_POA', 'DIAGNOSIS_20_POA', 'DIAGNOSIS_21_POA', 'DIAGNOSIS_22_POA', 'DIAGNOSIS_23_POA', 'DIAGNOSIS_24_POA', 'DIAGNOSIS_25_POA', 'ICD_PROC_7_DIM_ID', 'ICD_PROC_8_DIM_ID', 'ICD_PROC_9_DIM_ID', 'ICD_PROC_10_DIM_ID', 'ICD_PROC_11_DIM_ID', 'ICD_PROC_12_DIM_ID', 'ICD_PROC_13_DIM_ID', 'ICD_PROC_14_DIM_ID', 'ICD_PROC_15_DIM_ID', 'ICD_PROC_16_DIM_ID', 'ICD_PROC_17_DIM_ID', 'ICD_PROC_18_DIM_ID', 'ICD_PROC_19_DIM_ID', 'ICD_PROC_20_DIM_ID', 'ICD_PROC_21_DIM_ID', 'ICD_PROC_22_DIM_ID', 'ICD_PROC_23_DIM_ID', 'ICD_PROC_24_DIM_ID', 'ICD_PROC_25_DIM_ID', 'EXTRACT(YEAR FROM ICD_PROC_7_DATE) ICD_PROC_7_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_7_DATE) ICD_PROC_7_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_7_DATE) ICD_PROC_7_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_8_DATE) ICD_PROC_8_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_8_DATE) ICD_PROC_8_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_8_DATE) ICD_PROC_8_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_9_DATE) ICD_PROC_9_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_9_DATE) ICD_PROC_9_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_9_DATE) ICD_PROC_9_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_10_DATE) ICD_PROC_10_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_10_DATE) ICD_PROC_10_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_10_DATE) ICD_PROC_10_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_11_DATE) ICD_PROC_11_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_11_DATE) ICD_PROC_11_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_11_DATE) ICD_PROC_11_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_12_DATE) ICD_PROC_12_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_12_DATE) ICD_PROC_12_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_12_DATE) ICD_PROC_12_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_13_DATE) ICD_PROC_13_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_13_DATE) ICD_PROC_13_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_13_DATE) ICD_PROC_13_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_14_DATE) ICD_PROC_14_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_14_DATE) ICD_PROC_14_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_14_DATE) ICD_PROC_14_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_15_DATE) ICD_PROC_15_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_15_DATE) ICD_PROC_15_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_15_DATE) ICD_PROC_15_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_16_DATE) ICD_PROC_16_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_16_DATE) ICD_PROC_16_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_16_DATE) ICD_PROC_16_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_17_DATE) ICD_PROC_17_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_17_DATE) ICD_PROC_17_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_17_DATE) ICD_PROC_17_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_18_DATE) ICD_PROC_18_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_18_DATE) ICD_PROC_18_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_18_DATE) ICD_PROC_18_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_19_DATE) ICD_PROC_19_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_19_DATE) ICD_PROC_19_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_19_DATE) ICD_PROC_19_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_20_DATE) ICD_PROC_20_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_20_DATE) ICD_PROC_20_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_20_DATE) ICD_PROC_20_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_21_DATE) ICD_PROC_21_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_21_DATE) ICD_PROC_21_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_21_DATE) ICD_PROC_21_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_22_DATE) ICD_PROC_22_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_22_DATE) ICD_PROC_22_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_22_DATE) ICD_PROC_22_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_23_DATE) ICD_PROC_23_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_23_DATE) ICD_PROC_23_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_23_DATE) ICD_PROC_23_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_24_DATE) ICD_PROC_24_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_24_DATE) ICD_PROC_24_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_24_DATE) ICD_PROC_24_DATE_D', 'EXTRACT(YEAR FROM ICD_PROC_25_DATE) ICD_PROC_25_DATE_Y', 'EXTRACT(MONTH FROM ICD_PROC_25_DATE) ICD_PROC_25_DATE_M', 'EXTRACT(DAY FROM ICD_PROC_25_DATE) ICD_PROC_25_DATE_D', 'RTCL_RATE_DIM_ID', 'ICD_VER_IND', 'SYS10', 'SYS11', 'SYS12', 'SYS13', 'SYS14', 'REF_PROVIDER_NPI', 'SOURCE_PRODUCT_DIM_ID', 'CLASS_DIM_ID', 'CLASS_PLAN_DIM_ID', 'BILLED_QUANTITY', 'EOB_DIM_ID', 'DTL_EOB_DIM_ID', 'PROV_AGREEMENT_DIM_ID', 'SDA_DIM_ID', 'SRC_SERVICE_NPI', 'SRC_BILLING_NPI', 'SRC_ADMITTING_NPI', 'SRC_OPERATING_NPI', 'DIAG_POINTER_1', 'DIAG_POINTER_2', 'DIAG_POINTER_3', 'DIAG_POINTER_4', 'DIAG_POINTER_5', 'DIAG_POINTER_6', 'DIAG_POINTER_7', 'DIAG_POINTER_8']
}
# update these 4 values to target specific dates by year, month and d, where "d" = Day of the month to start validation
# and endday = the day of the month to validate (up-to-this-day), example: validate every day from 8-11-2021 through 8-15-2021
yearNumber = 2022
month=4
d=1
endday=15
# you can increase the amount of records to validate per day with the next value, but I found 2000 is the sweet spot where
# performance is not greatly affected, yet the amount of records is high enough for accuracy
rowcomparison='2000'
try:
    for entity, attribute_list in input_list.items():
        listToStr = ','.join([str(elem) for elem in attribute_list])
        day = d
        while day <= endday:
            try:
                print('generating report for ' + entity + ' ' + str(yearNumber) + ' ' + str(month) + ' ' + str(day))
                q1 = 'SELECT ' + listToStr + ' FROM COMPACT.' + entity + ' WHERE EXTRACT(YEAR FROM DETAIL_SVC_DATE) = ' \
                     + str(yearNumber) + ' AND EXTRACT(MONTH FROM DETAIL_SVC_DATE) = ' + str(month) \
                     + ' AND EXTRACT(DAY FROM DETAIL_SVC_DATE) = ' + str(day) \
                     + ' ORDER BY CLAIM_NUMBER,COMPANY_DIM_ID,LINE_NUMBER,SUB_LINE_CODE LIMIT ' + rowcomparison
                q2 = 'SELECT ' + listToStr + ' FROM DW.' + entity + ' WHERE EXTRACT(YEAR FROM DETAIL_SVC_DATE) = ' \
                     + str(yearNumber) + ' AND EXTRACT(MONTH FROM DETAIL_SVC_DATE) = ' + str(month) \
                     + ' AND EXTRACT(DAY FROM DETAIL_SVC_DATE) = ' + str(day) \
                     + ' ORDER BY CLAIM_NUMBER,COMPANY_DIM_ID,LINE_NUMBER,SUB_LINE_CODE FETCH FIRST ' + rowcomparison +' ROWS ONLY'
                execute_compare(q1, q2, entity, str(yearNumber),str(month), str(day))
            except Exception as e:
                print(e, e.args)
                raise
            day += 1
except Exception as e:
    print(e, e.args)
    raise
finally:
    sf_conn.close()
    ora_conn.close()