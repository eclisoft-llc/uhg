#!/usr/bin/bash
set -x
# Setting environment variable for Snowsql
source ~/.bash_profile

log_name=`basename $0 | cut -f1 -d'.'`

send_mail()
  {
    subj=$1
    to_ls=$2
    attch=$3
       mailx -r $email_from -s "${subj}" -a ${attch} $to_ls << EOF
    Team,
      Please find the subject line for details.

      Note: This is an autogenerated email and the mail box is not monitored.
EOF
  }

#######################################################################################################
  # Main Script
#######################################################################################################

  #Argument validation
  if [ $# -eq 1 ]
    then
      if [ $1 == "DEV" ]
        then
          #Source all the configurations
          source /obhdp_dev/tcoc/d_conf/obhdp_conf.sh
          echo "Task status check initiated for DEV environment"
      elif [ $1 == "STG" ]
        then
          source /obhdp/tcoc/s_conf/obhdp_conf.sh
          echo "Task status check initiated for STG environment"
      elif [ $1 == "PRD" ]
        then
          source /obhdp/tcoc/p_conf/obhdp_conf.sh
          echo "Task status check initiated for PRD environment"
      else
        echo "invalid Environment passed in the argument, please pass DEV/STG/PRD"
        exit 1
      fi
  else
    echo "Invalid Arguments, please pass one argument and should be DEV/STG/PRD"
    exit 1
  fi
log_file=${Log_dir}/${log_name}_`date +%Y%m%d_%H%M%S`.txt
tsk_lst="FND_CLM_TRANS_SRVC_LN_LD FND_PHRM_DRG_CLM_LD OBHDP_CLM_TRANS_SRVC_LN_LD OBHDP_DIM_PHRM_NDC_DRG_LD OBHDP_PHRM_DRG_CLM_LD"
echo "Tasks for status check: ${tsk_lst}" >> ${log_file}
for i in ${tsk_lst}; do
  echo "Starting status check for: ${i}" >> ${log_file}
  fail_cnt=$(snowsql -c ${sf_env} -q "select count(*) from table(information_schema.task_history(scheduled_time_range_start=>dateadd('hour',-6,current_timestamp()),ERROR_ONLY => TRUE,task_name=>'${i}'))" -o friendly=False -o header=False -o output_format=plain -o timing=False)
  echo "No. of failed entries for Task ${i}: ${fail_cnt}" >> ${log_file}
  if [ ${fail_cnt} -ne 0 ]
    then
      echo "${i} Task has failed entries, sending email to check" >> ${log_file}
      send_mail "${i} Task Failed" $email_to ${log_file}
  fi
done
