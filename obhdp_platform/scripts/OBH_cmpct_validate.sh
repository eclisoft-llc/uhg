#!/usr/bin/bash
export LD_LIBRARY_PATH=/opt/oracle/instantclient_21_6:$LD_LIBRARY_PATH
log_name=`basename $0 | cut -f1 -d'.'`

send_mail()
  {
    subj=$1
    to_ls=$2
       mailx -r $email_from -s "${subj}" $to_ls << EOF
    Team,
      Please find the subject line for details.

      Note: This is an autogenerated email and the mail box is not monitored.

EOF
##send_mail "SQL failed for ${file_name}" $email_to
  }

status_check()
{
    if [ $? -eq 0 ]
    then
      script=$1
      echo "${script} completed" >> ${log_file}
      send_mail "${script} completed successfully" $email_to
  else
      script=$1
      echo "${script} failed" >> ${log_file}
      send_mail "${script} failed" $email_to
  fi
}
#######################################################################################################
  # Main Script
#######################################################################################################

  #Argument validation
  if [ $# -eq 1 ]
    then
      if [ $1 == "DEV" ]
        then
          #Source all the configurations
          source /obhdp_dev/tcoc/d_conf/obhdp_conf.sh
          echo "Validation initiated for DEV environment"
      elif [ $1 == "STG" ]
        then
          source /obhdp/tcoc/s_conf/obhdp_conf.sh
          echo "Validation initiated for STG environment"
      elif [ $1 == "PRD" ]
        then
          source /obhdp/tcoc/p_conf/obhdp_conf.sh
          echo "Validation initiated for PRD environment"
      else
        echo "invalid Environment passed in the argument, please pass DEV/STG/PRD"
        exit 1
      fi
  else
    echo "Invalid Arguments, please pass one argument and should be DEV/STG/PRD"
    exit 1
  fi
log_file=${Log_dir}/${log_name}_`date +%Y%m%d_%H%M%S`.txt
  java -cp ${jars}/PBEEncryption_Optum.jar com.optum.peds.dl.common.AesDesCrypt decrypt `cat ${config}/smart_unix.conf` OBH_Smart1@ > ${Log_dir}/output1.txt
  orapwd=`cat ${Log_dir}/output1.txt`
  rm -f ${Log_dir}/output1.txt

  java -cp ${jars}/PBEEncryption_Optum.jar com.optum.peds.dl.common.AesDesCrypt decrypt `cat ${config}/sfpsphrs.conf` OBH_Smart1@ > ${Log_dir}/output2.txt
  passphrs=`cat ${Log_dir}/output2.txt`
  rm -f ${Log_dir}/output2.txt


    if [ -f ${inbound}/validation_cmpct.trig ]
      then
        echo "Compact validation trigger file found, Validation will start" >> ${log_file}
        cd ${scripts}
        echo "Starting compact small tables validation" >> ${log_file}
        python3 Cmpr_smrt_cmpct_small.py --oradsn ${oradsn} --orauser ${orauser} --orapwd ${orapwd} --sfact ${sfactname} --sfuser ${sfuser} --pkeypath ${keypath} --sfrole ${r_name} --sfwh ${wh_name} --sfdb ${db_name} --psphrs ${passphrs} --diffpath ${outbound}
        status_check "Cmpr_smrt_cmpct_small.py"
        echo "Starting compact medium tables validation" >> ${log_file}
        python3 Cmpr_smrt_cmpct_med.py --oradsn ${oradsn} --orauser ${orauser} --orapwd ${orapwd} --sfact ${sfactname} --sfuser ${sfuser} --pkeypath ${keypath} --sfrole ${r_name} --sfwh ${wh_name} --sfdb ${db_name} --psphrs ${passphrs} --diffpath ${outbound}
        status_check "Cmpr_smrt_cmpct_med.py"
        echo "Starting compact FACT_CLAIM validation" >> ${log_file}
        python3 Cmpr_smrt_cmpct_FACT_CLAIM.py --oradsn ${oradsn} --orauser ${orauser} --orapwd ${orapwd} --sfact ${sfactname} --sfuser ${sfuser} --pkeypath ${keypath} --sfrole ${r_name} --sfwh ${wh_name} --sfdb ${db_name} --psphrs ${passphrs} --diffpath ${outbound}
        status_check "Cmpr_smrt_cmpct_FACT_CLAIM.py"
        echo "Starting compact FACT_MEMBELIG_HIST validation" >> ${log_file}
        python3 Cmpr_smrt_cmpct_FACT_MEMBELIG_HIST.py --oradsn ${oradsn} --orauser ${orauser} --orapwd ${orapwd} --sfact ${sfactname} --sfuser ${sfuser} --pkeypath ${keypath} --sfrole ${r_name} --sfwh ${wh_name} --sfdb ${db_name} --psphrs ${passphrs} --diffpath ${outbound}
        status_check "Cmpr_smrt_cmpct_FACT_MEMBELIG_HIST.py"
        echo "Starting compact FACT_RX_ADDITION validation" >> ${log_file}
        python3 Cmpr_smrt_cmpct_FACT_RX_ADDITION.py --oradsn ${oradsn} --orauser ${orauser} --orapwd ${orapwd} --sfact ${sfactname} --sfuser ${sfuser} --pkeypath ${keypath} --sfrole ${r_name} --sfwh ${wh_name} --sfdb ${db_name} --psphrs ${passphrs} --diffpath ${outbound}
        status_check "Cmpr_smrt_cmpct_FACT_RX_ADDITION.py"
        echo "Starting compact FACT_CLAIM_EXTN_PROV validation" >> ${log_file}
        python3 Cmpr_smrt_cmpct_FACT_CLAIM_EXTN_PROV.py --oradsn ${oradsn} --orauser ${orauser} --orapwd ${orapwd} --sfact ${sfactname} --sfuser ${sfuser} --pkeypath ${keypath} --sfrole ${r_name} --sfwh ${wh_name} --sfdb ${db_name} --psphrs ${passphrs} --diffpath ${outbound}
        status_check "Cmpr_smrt_cmpct_FACT_CLAIM_EXTN_PROV.py"
        echo "Starting compact FACT_MEMBER_REVENUE_DETAIL validation" >> ${log_file}
        python3 Cmpr_smrt_cmpct_FACT_MEMBER_REVENUE_DETAIL.py --oradsn ${oradsn} --orauser ${orauser} --orapwd ${orapwd} --sfact ${sfactname} --sfuser ${sfuser} --pkeypath ${keypath} --sfrole ${r_name} --sfwh ${wh_name} --sfdb ${db_name} --psphrs ${passphrs} --diffpath ${outbound}
        status_check "Cmpr_smrt_cmpct_FACT_MEMBER_REVENUE_DETAIL.py"
        mv ${inbound}/validation_cmpct.trig ${archive_success}/validation_cmpct_`date +%Y%m%d_%H%M%S`.trig
    else
      echo "Compact load complete trigger file doesn't exist, validation will not be triggered" >> ${log_file}
    fi


