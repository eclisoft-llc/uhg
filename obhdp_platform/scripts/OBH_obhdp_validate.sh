#!/usr/bin/bash
set -x
# Setting environment variable for Snowsql
source ~/.bash_profile
export LD_LIBRARY_PATH=/opt/oracle/instantclient_21_6:$LD_LIBRARY_PATH
log_name=`basename $0 | cut -f1 -d'.'`

send_mail()
  {
    subj=$1
    to_ls=$2
       mailx -r $email_from -s "${subj}" $to_ls << EOF
    Team,
      Please find the subject line for details.

      Note: This is an autogenerated email and the mail box is not monitored.

EOF
##send_mail "SQL failed for ${file_name}" $email_to
  }

status_check()
{
    if [ $? -eq 0 ]
    then
      script=$1
      echo "${script} completed" >> ${log_file}
      send_mail "${script} completed successfully" $email_to
  else
      script=$1
      echo "${script} failed" >> ${log_file}
      send_mail "${script} failed" $email_to
  fi
}
#######################################################################################################
  # Main Script
#######################################################################################################
#Argument validation
  if [ $# -eq 1 ]
    then
      if [ $1 == "DEV" ]
        then
          #Source all the configurations
          source /obhdp_dev/tcoc/d_conf/obhdp_conf.sh
          echo "Validation initiated for DEV environment"
      elif [ $1 == "STG" ]
        then
          source /obhdp/tcoc/s_conf/obhdp_conf.sh
          echo "Validation initiated for STG environment"
      elif [ $1 == "PRD" ]
        then
          source /obhdp/tcoc/p_conf/obhdp_conf.sh
          echo "Validation initiated for PRD environment"
      else
        echo "invalid Environment passed in the argument, please pass DEV/STG/PRD"
        exit 1
      fi
  else
    echo "Invalid Arguments, please pass one argument and should be DEV/STG/PRD"
    exit 1
  fi
log_file=${Log_dir}/${log_name}_`date +%Y%m%d_%H%M%S`.txt
  java -cp ${jars}/PBEEncryption_Optum.jar com.optum.peds.dl.common.AesDesCrypt decrypt `cat ${config}/sfpsphrs.conf` OBH_Smart1@ > ${Log_dir}/output4.txt
  passphrs=`cat ${Log_dir}/output4.txt`
  rm -f ${Log_dir}/output4.txt


    if [ -f ${inbound}/validation_obh.trig ]
      then
        echo "OBHDP validation trigger file found, Validation will start" >> ${log_file}
        cd ${scripts}
        trig_sts=$(snowsql -c ${sf_env} -q "SELECT CASE WHEN (SELECT IFNULL((SELECT LOAD_END FROM (SELECT TABLE_TARGET,LOAD_END,row_number() OVER (PARTITION BY TABLE_TARGET order by LOAD_END DESC) R_NUM FROM ETL.DBA_PROCESS_LOG where TABLE_TARGET = 'COMPACT.DIM_NDC_CODE') WHERE R_NUM = 1), '2000-01-01 00:00:00.000') LOAD_END) > (SELECT IFNULL((SELECT LOAD_END FROM (SELECT TABLE_TARGET,LOAD_END,row_number() OVER (PARTITION BY TABLE_TARGET order by LOAD_END DESC) R_NUM FROM ETL.DBA_PROCESS_LOG where TABLE_TARGET = 'OBH_DP.DIM_PHRM_NDC_DRG') WHERE R_NUM = 1), '2000-01-01 00:00:00.000') LOAD_END) THEN 'SUCCESS' ELSE 'FAIL' END AS RESULT FROM DUAL" -o friendly=False -o header=False -o output_format=plain -o timing=False)
        if [ ${trig_sts} == "SUCCESS" ]
          then
            echo "Process log load_end time entries validated, Starting DIM_PHRM_NDC_DRG validation" >> ${log_file}
            python3 Cmpr_cmpct_obh_DIM_PHRM_NDC_DRG.py --sfact ${sfactname} --sfuser ${sfuser} --pkeypath ${keypath} --sfrole ${r_name} --sfwh ${wh_name} --sfdb ${db_name} --psphrs ${passphrs} --diffpath ${outbound}
            status_check "Cmpr_cmpct_obh_DIM_PHRM_NDC_DRG.py"
        fi
        trig_sts=$(snowsql -c ${sf_env} -q "SELECT CASE WHEN (SELECT IFNULL((SELECT LOAD_END FROM (SELECT TABLE_TARGET,LOAD_END,row_number() OVER (PARTITION BY TABLE_TARGET order by LOAD_END DESC) R_NUM FROM ETL.DBA_PROCESS_LOG where TABLE_TARGET = 'FOUNDATION.CLM_TRANS_SRVC_LN') WHERE R_NUM = 1), '2000-01-01 00:00:00.000') LOAD_END) > (SELECT IFNULL((SELECT LOAD_END FROM (SELECT TABLE_TARGET,LOAD_END,row_number() OVER (PARTITION BY TABLE_TARGET order by LOAD_END DESC) R_NUM FROM ETL.DBA_PROCESS_LOG where TABLE_TARGET = 'OBH_DP.CLM_TRANS_SRVC_LN') WHERE R_NUM = 1), '2000-01-01 00:00:00.000') LOAD_END) THEN 'SUCCESS' ELSE 'FAIL' END AS RESULT FROM DUAL" -o friendly=False -o header=False -o output_format=plain -o timing=False)
        if [ ${trig_sts} == "SUCCESS" ]
          then
            echo "Process log load_end time entries validated, Starting CLM_TRANS_SRVC_LN validation" >> ${log_file}
            python3 Cmpr_fnd_obh_CLM_TRANS_SRVC_LN.py --sfact ${sfactname} --sfuser ${sfuser} --pkeypath ${keypath} --sfrole ${r_name} --sfwh ${wh_name} --sfdb ${db_name} --psphrs ${passphrs} --diffpath ${outbound}
            status_check "Cmpr_fnd_obh_CLM_TRANS_SRVC_LN.py"
        fi
        trig_sts=$(snowsql -c ${sf_env} -q "SELECT CASE WHEN (SELECT IFNULL((SELECT LOAD_END FROM (SELECT TABLE_TARGET,LOAD_END,row_number() OVER (PARTITION BY TABLE_TARGET order by LOAD_END DESC) R_NUM FROM ETL.DBA_PROCESS_LOG where TABLE_TARGET = 'FOUNDATION.PHRM_DRG_CLM') WHERE R_NUM = 1), '2000-01-01 00:00:00.000') LOAD_END) > (SELECT IFNULL((SELECT LOAD_END FROM (SELECT TABLE_TARGET,LOAD_END,row_number() OVER (PARTITION BY TABLE_TARGET order by LOAD_END DESC) R_NUM FROM ETL.DBA_PROCESS_LOG where TABLE_TARGET = 'OBH_DP.PHRM_DRG_CLM') WHERE R_NUM = 1), '2000-01-01 00:00:00.000') LOAD_END) THEN 'SUCCESS' ELSE 'FAIL' END AS RESULT FROM DUAL" -o friendly=False -o header=False -o output_format=plain -o timing=False)
        if [ ${trig_sts} == "SUCCESS" ]
          then
            echo "Process log load_end time entries validated, Starting PHRM_DRG_CLM validation" >> ${log_file}
            python3 Cmpr_fnd_obh_PHRM_DRG_CLM.py --sfact ${sfactname} --sfuser ${sfuser} --pkeypath ${keypath} --sfrole ${r_name} --sfwh ${wh_name} --sfdb ${db_name} --psphrs ${passphrs} --diffpath ${outbound}
            status_check "Cmpr_fnd_obh_PHRM_DRG_CLM.py"
            mv ${inbound}/validation_obh.trig ${archive_success}/validation_obh_`date +%Y%m%d_%H%M%S`.trig
        fi
    else
      echo "OBHDP validation trigger file doesn't exist, validation will not be triggered" >> ${log_file}
    fi


